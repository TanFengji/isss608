[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS609-AY2023-24T4",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "assignment_1.html",
    "href": "assignment_1.html",
    "title": "Take Home Assignment 1",
    "section": "",
    "text": "Our dataset contains transaction records for both public and private residential properties from January 1, 2023, to March 31, 2024. The task is to provide insights into the private residential market and its sub-markets in Singapore for the first quarter of 2024, with the help of visualization to describe and discuss the trends."
  },
  {
    "objectID": "assignment_1.html#introduction",
    "href": "assignment_1.html#introduction",
    "title": "Take Home Assignment 1",
    "section": "",
    "text": "A comprehensive dataset containing transaction records for private residential properties from January 1, 2023, to March 31, 2024, is available. This dataset provides insights into the private residential market and its sub-markets in Singapore for the first quarter of 2024."
  },
  {
    "objectID": "assignment_1.html#preprocessing",
    "href": "assignment_1.html#preprocessing",
    "title": "Take Home Assignment 1",
    "section": "Preprocessing",
    "text": "Preprocessing\nImporting libraries:\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\n\nMerge the dataset:\n\noptions(readr.show_col_types = FALSE)\n\n#merge all the CSV files (5 in total) into one dataframe\ndf &lt;- list.files(path='./data/Take-home_Ex01/data', full.names = TRUE) %&gt;% \n  lapply(read_csv) %&gt;% \n  bind_rows \n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nPrint basic information regarding transactions\n\nsummary(df)\n\n Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n                                                                              \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.5   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n NA's   :6                                                                 \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n                                                       \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area     \n Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character"
  },
  {
    "objectID": "assignment_1.html#introduction-and-task",
    "href": "assignment_1.html#introduction-and-task",
    "title": "Take Home Assignment 1",
    "section": "",
    "text": "Our dataset contains transaction records for both public and private residential properties from January 1, 2023, to March 31, 2024. The task is to provide insights into the private residential market and its sub-markets in Singapore for the first quarter of 2024, with the help of visualization to describe and discuss the trends."
  },
  {
    "objectID": "assignment_1.html#pre-processing",
    "href": "assignment_1.html#pre-processing",
    "title": "Take Home Assignment 1",
    "section": "Pre-processing",
    "text": "Pre-processing\nImporting libraries:\n\nlibrary(readr)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nMerge the datasets (5 csv) into 1 dataframe:\n\noptions(readr.show_col_types = FALSE)\noptions(warn=-1)\n\n#merge all the CSV files (5 in total) into one dataframe\ndf &lt;- list.files(path='./data/Take-home_Ex01/data', full.names = TRUE) %&gt;% \n  lapply(read_csv) %&gt;% \n  bind_rows \n\n\nunique(df$`Purchaser Address Indicator`)\n\n[1] \"HDB\"     \"Private\" \"N.A\"    \n\n\nAs shown above, there are 3 types in Purchaser Address Indicator. Since we only concern about private residential market, transcation records for ‘HDB’ and ‘N.A.’ will be removed.\n\ndf &lt;- df %&gt;%\n  filter(`Purchaser Address Indicator` == \"Private\")\n\nAlso, the ‘Sale Date’ is in string format, which will be converted to Date format for better visualization.\n\ndf$`Sale Date` = as.Date(df$`Sale Date`, format = \"%d %b %Y\")"
  },
  {
    "objectID": "assignment_1.html#visualization-1",
    "href": "assignment_1.html#visualization-1",
    "title": "Take Home Assignment 1",
    "section": "Visualization 1",
    "text": "Visualization 1\nTransaction trend across different property type\n\ndf_tran = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\"), `Property Type`) %&gt;%\n  summarize(transactions = sum(`Number of Units`))\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\ndf_tran_total = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\")) %&gt;%\n  summarize(transactions = sum(`Number of Units`))\ndf_tran_total$`Property Type` = \"Total\"\ndf_tran &lt;- rbind(df_tran, df_tran_total)\n\n\nggplot(df_tran, aes(x=`month`, y=`transactions`, group=`Property Type`, color=`Property Type`)) +\n  geom_line() +\n  ggtitle(\"Transaction trend across different property type\")+\n  xlab(\"Month\")+\n  ylab(\"No. of Transactions\")\n\n\n\n\nFrom the graph, the transaction numbers for detached house, executive condominium, semi-detached house and terrace house are rather consistent, and relatively small compared to the apartment and condo. Although the transaction number for both apartment and condo are high, the condo changes smoother across time compared to apartment. The fluctuations in the total transaction number are mainly due to apartment. Since July 2023, the general trend for the private residential market is shrinking. For the 2024 Q1, transaction numbers reaches the lowest point across the last year."
  },
  {
    "objectID": "assignment_1.html#visualization-2",
    "href": "assignment_1.html#visualization-2",
    "title": "Take Home Assignment 1",
    "section": "Visualization 2",
    "text": "Visualization 2\nUnit price trend across different property type\n\ndf_unit_price = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\"), `Property Type`) %&gt;%\n  summarize(`Unit Price ($ PSF)` = mean(`Unit Price ($ PSF)`))\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\n\n\nggplot(df_unit_price, aes(x=`month`, y=`Unit Price ($ PSF)`, group=`Property Type`, color=`Property Type`)) +\n  geom_line() +\n  ggtitle(\"Unit Price (PSF) across different property type\")+\n  xlab(\"Month\")+\n  ylab(\"Mean Unit Price ($ PSF)\")\n\n\n\n\nFor condo, detached house, semi-detached house and terrace house, the unit price fluctuates a lot during the year, but at the year end, the unit prices eventually changes back around the beginning of the year. For apartment’s unit price, the general trend is decreasing with some fluctuations. For the executive condo, the unit price changes is usually very minor compared to the rest, but consistently increases. For the 2024 Q1, it’s unit price drop a little bit."
  },
  {
    "objectID": "assignment_1.html#visualization-3",
    "href": "assignment_1.html#visualization-3",
    "title": "Take Home Assignment 1",
    "section": "Visualization 3",
    "text": "Visualization 3\nTransactions across different areas (East, North east, central, north, west)\n\nunique(df$`Planning Region`)\n\n[1] \"East Region\"       \"North East Region\" \"Central Region\"   \n[4] \"North Region\"      \"West Region\"      \n\n\n\ndf_tran_area = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\"), `Planning Region`) %&gt;%\n  summarize(transactions = sum(`Number of Units`))\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\n\n\nggplot(df_tran_area, aes(x=`month`, y=`transactions`, group=`Planning Region`, color=`Planning Region`)) +\n  geom_line() +\n  ggtitle(\"Transactions across different regions\")+\n  xlab(\"Month\")+\n  ylab(\"No. of transactions\")\n\n\n\n\nThe transactions for east, north east, north and west regions are rather consistent across the year. The transactions for the central region increased significantly since the start of 2023, fluctuates from 2023 April to Augest, and then slowly decreased all the way until the Q1 of 2024. This helps explain the fluctuations in visualization 1, which is likely be caused by the fluctuations from the condo of central region."
  }
]