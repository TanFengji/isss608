[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-AY2023-24T4",
    "section": "",
    "text": "This is Fengji’s Quarto website for ISSS608"
  },
  {
    "objectID": "in-class/In-class_Ex07.html",
    "href": "in-class/In-class_Ex07.html",
    "title": "In-class 7",
    "section": "",
    "text": "Tableau Public:\nhttps://public.tableau.com/app/profile/tan.fengji/viz/lesson_7_vis1/lesson_7_vis1\nhttps://public.tableau.com/app/profile/tan.fengji/viz/lesson7_vis2/Dashboard1"
  },
  {
    "objectID": "in-class/In-class_Ex05.html",
    "href": "in-class/In-class_Ex05.html",
    "title": "In-class 5",
    "section": "",
    "text": "pacman::p_load(tidytext, tidyverse, readtext, quanteda, ggwordcloud)\n\n\narticles &lt;- \"../data/mc1/articles/*\"\n\n\ntext_data &lt;- readtext(articles)\n\n\ncorpus_text &lt;- corpus(text_data)\nsummary(corpus_text,5)\n\nCorpus consisting of 338 documents, showing 5 documents:\n\n                                   Text Types Tokens Sentences\n Alvarez PLC__0__0__Haacklee Herald.txt   206    433        18\n    Alvarez PLC__0__0__Lomark Daily.txt   102    170        12\n   Alvarez PLC__0__0__The News Buoy.txt    90    200         9\n Alvarez PLC__0__1__Haacklee Herald.txt    96    187         8\n    Alvarez PLC__0__1__Lomark Daily.txt   241    504        21\n\n\n\nusenet_words &lt;- text_data %&gt;%\n  unnest_tokens(word, text) %&gt;%\n  filter(str_detect(word, \"[a-z']$\"),\n         !word %in% stop_words$word)\n\nusenet_words %&gt;%\n  count(word, sort = TRUE)\n\nreadtext object consisting of 3260 documents and 0 docvars.\n# A data frame: 3,260 × 3\n  word             n text     \n  &lt;chr&gt;        &lt;int&gt; &lt;chr&gt;    \n1 fishing       2177 \"\\\"\\\"...\"\n2 sustainable   1525 \"\\\"\\\"...\"\n3 company       1036 \"\\\"\\\"...\"\n4 practices      838 \"\\\"\\\"...\"\n5 industry       715 \"\\\"\\\"...\"\n6 transactions   696 \"\\\"\\\"...\"\n# ℹ 3,254 more rows\n\nwords_by_doc_id &lt;- usenet_words %&gt;%\n  count(doc_id, word, sort = TRUE) %&gt;%\n  ungroup()\n\n\ntext_data_split &lt;- text_data %&gt;%\n  mutate(Company = str_extract(doc_id, \"^[^_]+\"),\n         News_Agencies = str_extract(doc_id, \"(?&lt;=__)[^_]+(?=\\\\.txt)\"))\n\n\ntext_data_splitted &lt;- text_data %&gt;%\n  separate_wider_delim(\"doc_id\",\n                       delim=\"__0__\",\n                       names = c(\"X\",\"Y\"),\n                       too_few = \"align_end\"\n  )\n\nusenet_words1 &lt;- text_data_split %&gt;%\n  unnest_tokens(word, text) %&gt;%\n  filter(str_detect(word, \"[a-z']$\"),\n         !word %in% stop_words$word)\n\nwords_by_news_agencies &lt;- usenet_words1 %&gt;%\n  count(News_Agencies, word, sort = TRUE) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "in-class/In-class_Ex03.html",
    "href": "in-class/In-class_Ex03.html",
    "title": "In-class 3",
    "section": "",
    "text": "Tableau notebook:\nhttps://public.tableau.com/app/profile/tan.fengji/viz/Book1_17141960920410/AnnualProfitandLoss"
  },
  {
    "objectID": "in-class/In-class_Ex01.html",
    "href": "in-class/In-class_Ex01.html",
    "title": "In-class 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)\nrealis &lt;- read_csv(\"../data/realis2019.csv\")\n\nRows: 19515 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (12): Project Name, Address, Type of Area, Nett Price($), Sale Date, Pro...\ndbl  (8): No. of Units, Area (sqm), Transacted Price ($), Unit Price ($ psm)...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nggplot(data = realis,\n       aes(x = `Unit Price ($ psm)`)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "hands-on/hands_on_8.html",
    "href": "hands-on/hands_on_8.html",
    "title": "Hands-on 8",
    "section": "",
    "text": "Choropleth Mapping\n\npacman::p_load(sf, tmap, tidyverse)\n\n\nmpsz &lt;- st_read(dsn = \"../data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\quarto\\ISSS609-AY2023-24\\isss608\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\npopdata &lt;- read_csv(\"../data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nWarning: `funs()` was deprecated in dplyr 0.8.0.\nℹ Please use a list of either functions or lambdas:\n\n# Simple named list: list(mean = mean, median = median)\n\n# Auto named with `tibble::lst()`: tibble::lst(mean, median)\n\n# Using lambdas list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\nwrite_rds(mpsz_pop2020, \"../data/rds/mpszpop2020.rds\")\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nReflection:\nDisplay geographical info with different visualization options (color, style, etc.)\n\n\nVisualising Geospatial Point Data\n\npacman::p_load(sf, tmap, tidyverse)\n\n\nsgpools &lt;- read_csv(\"../data/aspatial/SGPools_svy21.csv\")\n\nRows: 306 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): NAME, ADDRESS, OUTLET TYPE\ndbl (4): POSTCODE, XCOORD, YCOORD, Gp1Gp2 Winnings\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = 1,\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = \"Gp1Gp2 Winnings\",\n           border.col = \"black\",\n           border.lwd = 1)\n\nLegend for symbol sizes not available in view mode.\n\n\n\n\n\n\n\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1)\n\nLegend for symbol sizes not available in view mode.\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\n\n\n\nAnalytical Mapping\n\npacman::p_load(tmap, tidyverse, sf)\n\n\nNGA_wp &lt;- read_rds(\"../data/rds/NGA_wp.rds\")\n\n\np1 &lt;- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = FALSE)\n\np2 &lt;- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total  water point by LGAs\",\n            legend.outside = FALSE)\n\ntmap_arrange(p2, p1, nrow = 1)\n\n\n\n\n\nNGA_wp &lt;- NGA_wp %&gt;%\n  mutate(pct_functional = wp_functional/total_wp) %&gt;%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\ntm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\",\n          legend.hist = TRUE) +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate map of functional water point by LGAs\",\n            legend.outside = TRUE)\n\n\n\n\n\nNGA_wp &lt;- NGA_wp %&gt;%\n  drop_na()\npercent &lt;- c(0,.01,.1,.5,.9,.99,1)\nvar &lt;- NGA_wp[\"pct_functional\"] %&gt;%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\npercentmap &lt;- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n\npercentmap(\"total_wp\", NGA_wp)"
  },
  {
    "objectID": "hands-on/hands_on_6.html",
    "href": "hands-on/hands_on_6.html",
    "title": "Hands-on 6",
    "section": "",
    "text": "Modelling, Visualising and Analysing Network Data with R\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\nGAStech_nodes &lt;- read_csv(\"../data/GAStech_email_node.csv\")\n\nRows: 54 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): label, Department, Title\ndbl (1): id\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nGAStech_edges &lt;- read_csv(\"../data/GAStech_email_edge-v2.csv\")\n\nRows: 9063 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): SentDate, Subject, MainSubject, sourceLabel, targetLabel\ndbl  (2): source, target\ntime (1): SentTime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\nggraph(GAStech_graph) + geom_edge_link() + geom_node_point()\n\nUsing \"stress\" as default layout\n\n\n\n\n\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\nReflection:\nVisualize network with different configurations."
  },
  {
    "objectID": "hands-on/hands_on_4.html",
    "href": "hands-on/hands_on_4.html",
    "title": "Hands-on 4",
    "section": "",
    "text": "Visual Statistical Analysis\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\nexam &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\nWarning in min(x): no non-missing arguments to min; returning Inf\n\n\nWarning in max(x): no non-missing arguments to max; returning -Inf\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\nWarning in min(x): no non-missing arguments to min; returning Inf\n\n\nWarning in max(x): no non-missing arguments to max; returning -Inf\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\nReflection:\nLearn how to retrieve more advanced statistical info from data.\n\n\nVisualising Uncertainty\n\nexam &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "hands-on/hands_on_2.html",
    "href": "hands-on/hands_on_2.html",
    "title": "Hands-on 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\nexam_data &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nThe PlotThe Code\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThe PlotThe Code\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\nThe PlotThe Code\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\nThe PlotThe Code\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\nThe PlotThe Code\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\nPlotCode\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\np1\n\n\n\n\n\n\n\n\nPlotCode\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\np2\n\n\n\n\n\n\n\n\nPlotCode\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nComposite PlotCode\n\n\n\n\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nReflection:\nIt shows us how to have more than 1 plot in 1 graph, and multiple plots together. It gathers and displays useful info together."
  },
  {
    "objectID": "hands-on/hands_on_1.html",
    "href": "hands-on/hands_on_1.html",
    "title": "Hands-on 1",
    "section": "",
    "text": "options(warn=-1)\npacman::p_load(tidyverse)\n\n\nexam_data &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nR graphicggplot\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + geom_histogram(bins=10, boundary = 100, color=\"black\", fill=\"grey\") + ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)               \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\nReflections:\nIt’s a very good introduction to explore various visualization techniques, such as barchart, scatterplot, etc."
  },
  {
    "objectID": "assignment_2.html",
    "href": "assignment_2.html",
    "title": "Take Home Assignment 2",
    "section": "",
    "text": "In this take-home exercise, we are required to:\n\nselect one data visualisation from the Take-home Exercise 1 submission prepared by your classmate,\ncritic the submission in terms of clarity and aesthetics,\nprepare a sketch for the alternative design by using the data visualisation design principles and best practices you had learned in Lesson 1 and 2.\nremake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.\n\nFor this assignment, I selected Keke’s assignment 1 visualization 1 for evaluation. https://isss608keke.netlify.app/takehome/takehome1"
  },
  {
    "objectID": "assignment_2.html#introduction",
    "href": "assignment_2.html#introduction",
    "title": "Take Home Assignment 2",
    "section": "",
    "text": "In this take-home exercise, we are required to:\n\nselect one data visualisation from the Take-home Exercise 1 submission prepared by your classmate,\ncritic the submission in terms of clarity and aesthetics,\nprepare a sketch for the alternative design by using the data visualisation design principles and best practices you had learned in Lesson 1 and 2.\nremake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.\n\nFor this assignment, I selected Keke’s assignment 1 visualization 1 for evaluation. https://isss608keke.netlify.app/takehome/takehome1"
  },
  {
    "objectID": "assignment_2.html#reproduce-visualization",
    "href": "assignment_2.html#reproduce-visualization",
    "title": "Take Home Assignment 2",
    "section": "Reproduce visualization",
    "text": "Reproduce visualization\nThe data preparation process is exactly the same as Keke’s original implementation.\n\npacman::p_load(ggplot2,lubridate,ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n\noptions(readr.show_col_types = FALSE)\noptions(warn=-1)\n\nsetwd(\"./data/Take-home_Ex01/data\")\nfull_data &lt;-  list.files(\n                    pattern = \"*.csv\",\n                    full.names=T) %&gt;%\n                    lapply(read_csv) %&gt;%\n                    bind_rows()\n\n\ncleaned_data &lt;- full_data %&gt;%\n  mutate(across(c(`Nett Price($)`, `Area (SQM)`, `Unit Price ($ PSM)`), ~replace(., . == \"\" | . == \"-\", NA))) %&gt;%\n  mutate(\n    `Transacted Price ($)` = as.numeric(gsub(\",\", \"\", `Transacted Price ($)`)),\n    `Area (SQFT)` = as.numeric(`Area (SQFT)`),\n    `Unit Price ($ PSF)` = as.numeric(gsub(\",\", \"\", `Unit Price ($ PSF)`)),\n    `Sale Date` = dmy(`Sale Date`),\n    `Area (SQM)` = as.numeric(`Area (SQM)`),\n    `Unit Price ($ PSM)` = as.numeric(gsub(\",\", \"\", `Unit Price ($ PSM)`)),\n    `Nett Price($)` = ifelse(is.na(`Nett Price($)`),\n                             `Area (SQM)` * `Unit Price ($ PSM)`,\n                             as.numeric(gsub(\",\", \"\", `Nett Price($)`)))\n  )\n\nReproduce visualization for central region:\n\np1 &lt;- cleaned_data %&gt;%\n  filter(`Planning Region` == \"Central Region\") %&gt;% \n  group_by(Month = floor_date(`Sale Date`, \"month\"), `Type of Sale`, `Property Type`) %&gt;%\n  summarize(Average_Price = mean(`Unit Price ($ PSM)`, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = Month, y = Average_Price, color = `Type of Sale`)) +\n  geom_line() +\n  scale_x_date(date_breaks = \"3 month\", date_labels = \"%b %Y\") +\n  labs(\n    title = \"Central Region: Trend of Average Unit Prices Over Time\",\n    x = \"Month\",\n    y = \"Average Unit Price ($ PSM)\"\n  ) +\n  facet_wrap(~ `Property Type`, scales = \"free_y\", strip.position = \"bottom\") +  \n  theme(\n    plot.title = element_text(size = rel(1.5)),\n    legend.position = \"top\",\n    legend.text = element_text(size = rel(0.8)),\n    panel.grid.major = element_line(color = \"grey80\"),\n    panel.grid.minor = element_blank(),\n    plot.margin = margin(10, 10, 10, 10),\n    strip.text = element_text(size = rel(0.8)),  # adjust strip text size\n    axis.text.x = element_text(size = rel(0.8), angle = 45, hjust = 1, vjust = 1),  # adjust x-axis text size\n    axis.ticks.length = unit(-3, \"pt\"),  #aAdjust tick length\n    panel.spacing = unit(1, \"lines\")  # adjust spacing between facets\n  )\n\np1"
  },
  {
    "objectID": "assignment_2.html#critics",
    "href": "assignment_2.html#critics",
    "title": "Take Home Assignment 2",
    "section": "Critics",
    "text": "Critics\nOriginal write-up from Keke:\nIn the Central Region, Q1 2024 presents a stable pricing pattern for apartments, condominiums, and terrace houses, mirroring trends from the previous year. Conversely, detached houses experienced a significant rise in prices, followed by a pronounced dip, particularly within the sub-sale segment, which has now narrowed down to only resale transactions. It shows there was flutuation under Executive condominiums from March to December 2023, culminating in a complete absence of new sales in the subsequent quarter. Meanwhile, semi-detached houses witnessed a singular decline in June 2023, after which prices entered a gradual and steady climb, indicating a stabilizing market as progress through 2024.\nCritics:\n\nRegarding the statement “detached houses experienced a significant rise in prices, followed by a pronounced dip, particularly within the sub-sale segment”, this can be clearly observed from the graph. However, it is worth noticing that the sale number of detached houses is quite low in the sub-sale market (21 for the whole year as shown below). The sales volume is insufficient to accurately depict the sales trend.\n\n\nsub_sale_detach &lt;- cleaned_data %&gt;%\n  filter(`Planning Region` == \"Central Region\" & `Property Type` == \"Detached Houses\" & `Type of Sale` == \"Sub Sale\")\nlength(sub_sale_detach)\n\n[1] 21\n\n\nA better approach might be remove the monthly plot based on some conditions, e.g. remove if sale of current month is less than 10.\n\np2 &lt;- cleaned_data %&gt;%\n  filter(`Planning Region` == \"Central Region\") %&gt;% \n  group_by(Month = floor_date(`Sale Date`, \"month\"), `Type of Sale`, `Property Type`) %&gt;%\n  filter(n() &gt;= 10) %&gt;% \n  summarize(Average_Price = mean(`Unit Price ($ PSM)`, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = Month, y = Average_Price, color = `Type of Sale`)) +\n  geom_line() +\n  ylim(10000,45000) + \n  scale_x_date(date_breaks = \"3 month\", date_labels = \"%b %Y\") +\n  labs(\n    title = \"Central Region: Trend of Average Unit Prices Over Time\",\n    x = \"Month\",\n    y = \"Average Unit Price ($ PSM)\"\n  ) +\n  facet_wrap(~ `Property Type`, scales = \"free_y\", strip.position = \"bottom\") +  \n  theme(\n    plot.title = element_text(size = rel(1.5)),\n    legend.position = \"top\",\n    legend.text = element_text(size = rel(0.8)),\n    panel.grid.major = element_line(color = \"grey80\"),\n    panel.grid.minor = element_blank(),\n    plot.margin = margin(10, 10, 10, 10),\n    strip.text = element_text(size = rel(0.8)),  # adjust strip text size\n    axis.text.x = element_text(size = rel(0.8), angle = 45, hjust = 1, vjust = 1),  # adjust x-axis text size\n    axis.ticks.length = unit(-3, \"pt\"),  #aAdjust tick length\n    panel.spacing = unit(1, \"lines\")  # adjust spacing between facets\n  )\n\np2\n\n\n\n\n\nRegarding the highlight of the fluctuation under executive condominiums compared to other property types, it is rather misleading. The graphs for different properties do not share the same y-axis scales. Highlighting fluctuations with a smaller scale can mislead users. A better visualization should have consistent scales across different property types.\n\n\np2 &lt;- cleaned_data %&gt;%\n  filter(`Planning Region` == \"Central Region\") %&gt;% \n  group_by(Month = floor_date(`Sale Date`, \"month\"), `Type of Sale`, `Property Type`) %&gt;%\n  summarize(Average_Price = mean(`Unit Price ($ PSM)`, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = Month, y = Average_Price, color = `Type of Sale`)) +\n  geom_line() +\n  ylim(10000,45000) + \n  scale_x_date(date_breaks = \"3 month\", date_labels = \"%b %Y\") +\n  labs(\n    title = \"Central Region: Trend of Average Unit Prices Over Time\",\n    x = \"Month\",\n    y = \"Average Unit Price ($ PSM)\"\n  ) +\n  facet_wrap(~ `Property Type`, scales = \"free_y\", strip.position = \"bottom\") +  \n  theme(\n    plot.title = element_text(size = rel(1.5)),\n    legend.position = \"top\",\n    legend.text = element_text(size = rel(0.8)),\n    panel.grid.major = element_line(color = \"grey80\"),\n    panel.grid.minor = element_blank(),\n    plot.margin = margin(10, 10, 10, 10),\n    strip.text = element_text(size = rel(0.8)),  # adjust strip text size\n    axis.text.x = element_text(size = rel(0.8), angle = 45, hjust = 1, vjust = 1),  # adjust x-axis text size\n    axis.ticks.length = unit(-3, \"pt\"),  #aAdjust tick length\n    panel.spacing = unit(1, \"lines\")  # adjust spacing between facets\n  )\n\np2"
  },
  {
    "objectID": "assignment_2.html#conclusion",
    "href": "assignment_2.html#conclusion",
    "title": "Take Home Assignment 2",
    "section": "Conclusion",
    "text": "Conclusion\nBy combining critic 1 and 2, a more impartial visualization could be created.\n\np2 &lt;- cleaned_data %&gt;%\n  filter(`Planning Region` == \"Central Region\") %&gt;% \n  group_by(Month = floor_date(`Sale Date`, \"month\"), `Type of Sale`, `Property Type`) %&gt;%\n  filter(n() &gt;= 10) %&gt;% \n  summarize(Average_Price = mean(`Unit Price ($ PSM)`, na.rm = TRUE), .groups = 'drop') %&gt;%\n  ggplot(aes(x = Month, y = Average_Price, color = `Type of Sale`)) +\n  geom_line() +\n  ylim(10000,45000) + \n  scale_x_date(date_breaks = \"3 month\", date_labels = \"%b %Y\") +\n  labs(\n    title = \"Central Region: Trend of Average Unit Prices Over Time\",\n    x = \"Month\",\n    y = \"Average Unit Price ($ PSM)\"\n  ) +\n  facet_wrap(~ `Property Type`, scales = \"free_y\", strip.position = \"bottom\") +  \n  theme(\n    plot.title = element_text(size = rel(1.5)),\n    legend.position = \"top\",\n    legend.text = element_text(size = rel(0.8)),\n    panel.grid.major = element_line(color = \"grey80\"),\n    panel.grid.minor = element_blank(),\n    plot.margin = margin(10, 10, 10, 10),\n    strip.text = element_text(size = rel(0.8)),  # adjust strip text size\n    axis.text.x = element_text(size = rel(0.8), angle = 45, hjust = 1, vjust = 1),  # adjust x-axis text size\n    axis.ticks.length = unit(-3, \"pt\"),  #aAdjust tick length\n    panel.spacing = unit(1, \"lines\")  # adjust spacing between facets\n  )\n\np2"
  },
  {
    "objectID": "assignment_1.html",
    "href": "assignment_1.html",
    "title": "Take Home Assignment 1",
    "section": "",
    "text": "Our dataset contains transaction records for both public and private residential properties from January 1, 2023, to March 31, 2024. The task is to provide insights into the private residential market and its sub-markets in Singapore for the first quarter of 2024, with the help of visualization to describe and discuss the trends."
  },
  {
    "objectID": "assignment_1.html#introduction-and-task",
    "href": "assignment_1.html#introduction-and-task",
    "title": "Take Home Assignment 1",
    "section": "",
    "text": "Our dataset contains transaction records for both public and private residential properties from January 1, 2023, to March 31, 2024. The task is to provide insights into the private residential market and its sub-markets in Singapore for the first quarter of 2024, with the help of visualization to describe and discuss the trends."
  },
  {
    "objectID": "assignment_1.html#pre-processing",
    "href": "assignment_1.html#pre-processing",
    "title": "Take Home Assignment 1",
    "section": "Pre-processing",
    "text": "Pre-processing\nImporting libraries:\n\nlibrary(readr)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nMerge the datasets (5 csv) into 1 dataframe:\n\noptions(readr.show_col_types = FALSE)\noptions(warn=-1)\n\n#merge all the CSV files (5 in total) into one dataframe\ndf &lt;- list.files(path='./data/Take-home_Ex01/data', full.names = TRUE) %&gt;% \n  lapply(read_csv) %&gt;% \n  bind_rows \n\n\nunique(df$`Purchaser Address Indicator`)\n\n[1] \"HDB\"     \"Private\" \"N.A\"    \n\n\nAs shown above, there are 3 types in Purchaser Address Indicator. Since we only concern about private residential market, transcation records for ‘HDB’ and ‘N.A.’ will be removed.\n\ndf &lt;- df %&gt;%\n  filter(`Purchaser Address Indicator` == \"Private\")\n\nAlso, the ‘Sale Date’ is in string format, which will be converted to Date format for better visualization.\n\ndf$`Sale Date` = as.Date(df$`Sale Date`, format = \"%d %b %Y\")"
  },
  {
    "objectID": "assignment_1.html#visualization-1",
    "href": "assignment_1.html#visualization-1",
    "title": "Take Home Assignment 1",
    "section": "Visualization 1",
    "text": "Visualization 1\nTransaction trend across different property type\n\ndf_tran = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\"), `Property Type`) %&gt;%\n  summarize(transactions = sum(`Number of Units`))\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\ndf_tran_total = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\")) %&gt;%\n  summarize(transactions = sum(`Number of Units`))\ndf_tran_total$`Property Type` = \"Total\"\ndf_tran &lt;- rbind(df_tran, df_tran_total)\n\n\nggplot(df_tran, aes(x=`month`, y=`transactions`, group=`Property Type`, color=`Property Type`)) +\n  geom_line() +\n  ggtitle(\"Transaction trend across different property type\")+\n  xlab(\"Month\")+\n  ylab(\"No. of Transactions\")\n\n\n\n\nFrom the graph, the transaction numbers for detached house, executive condominium, semi-detached house and terrace house are rather consistent, and relatively small compared to the apartment and condo. Although the transaction number for both apartment and condo are high, the condo changes smoother across time compared to apartment. The fluctuations in the total transaction number are mainly due to apartment. Since July 2023, the general trend for the private residential market is shrinking. For the 2024 Q1, transaction numbers reaches the lowest point across the last year."
  },
  {
    "objectID": "assignment_1.html#visualization-2",
    "href": "assignment_1.html#visualization-2",
    "title": "Take Home Assignment 1",
    "section": "Visualization 2",
    "text": "Visualization 2\nUnit price trend across different property type\n\ndf_unit_price = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\"), `Property Type`) %&gt;%\n  summarize(`Unit Price ($ PSF)` = mean(`Unit Price ($ PSF)`))\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\n\n\nggplot(df_unit_price, aes(x=`month`, y=`Unit Price ($ PSF)`, group=`Property Type`, color=`Property Type`)) +\n  geom_line() +\n  ggtitle(\"Unit Price (PSF) across different property type\")+\n  xlab(\"Month\")+\n  ylab(\"Mean Unit Price ($ PSF)\")\n\n\n\n\nFor condo, detached house, semi-detached house and terrace house, the unit price fluctuates a lot during the year, but at the year end, the unit prices eventually changes back around the beginning of the year. For apartment’s unit price, the general trend is decreasing with some fluctuations. For the executive condo, the unit price changes is usually very minor compared to the rest, but consistently increases. For the 2024 Q1, it’s unit price drop a little bit."
  },
  {
    "objectID": "assignment_1.html#visualization-3",
    "href": "assignment_1.html#visualization-3",
    "title": "Take Home Assignment 1",
    "section": "Visualization 3",
    "text": "Visualization 3\nTransactions across different areas (East, North east, central, north, west)\n\nunique(df$`Planning Region`)\n\n[1] \"East Region\"       \"North East Region\" \"Central Region\"   \n[4] \"North Region\"      \"West Region\"      \n\n\n\ndf_tran_area = df %&gt;%\n  group_by(month=format(`Sale Date`, format=\"%y'%m\"), `Planning Region`) %&gt;%\n  summarize(transactions = sum(`Number of Units`))\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\n\n\nggplot(df_tran_area, aes(x=`month`, y=`transactions`, group=`Planning Region`, color=`Planning Region`)) +\n  geom_line() +\n  ggtitle(\"Transactions across different regions\")+\n  xlab(\"Month\")+\n  ylab(\"No. of transactions\")\n\n\n\n\nThe transactions for east, north east, north and west regions are rather consistent across the year. The transactions for the central region increased significantly since the start of 2023, fluctuates from 2023 April to Augest, and then slowly decreased all the way until the Q1 of 2024. This helps explain the fluctuations in visualization 1, which is likely be caused by the fluctuations from the condo of central region."
  },
  {
    "objectID": "assignment_3.html",
    "href": "assignment_3.html",
    "title": "Take Home Assignment 3",
    "section": "",
    "text": "I picked MC3 of VAST Challenge 2024. The objective of the exercise is to help help FishEye to better identify bias, track behavior changes, and infer temporal patterns from the knowledge graphs prepared by their data analysts.\nWe will focus on task 1 in the mini-challenge, which is:\n\nFishEye analysts want to better visualize changes in corporate structures over time. Create a visual analytics approach that analysts can use to highlight temporal patterns and changes in corporate structures. Examine the most active people and businesses using visual analytics."
  },
  {
    "objectID": "assignment_3.html#introduction",
    "href": "assignment_3.html#introduction",
    "title": "Take Home Assignment 3",
    "section": "",
    "text": "I picked MC3 of VAST Challenge 2024. The objective of the exercise is to help help FishEye to better identify bias, track behavior changes, and infer temporal patterns from the knowledge graphs prepared by their data analysts.\nWe will focus on task 1 in the mini-challenge, which is:\n\nFishEye analysts want to better visualize changes in corporate structures over time. Create a visual analytics approach that analysts can use to highlight temporal patterns and changes in corporate structures. Examine the most active people and businesses using visual analytics."
  },
  {
    "objectID": "assignment_3.html#data-preparation",
    "href": "assignment_3.html#data-preparation",
    "title": "Take Home Assignment 3",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nLoad library and data\n\n\nShow code\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, graphlayouts, ggforce, skimr, tidytext, tidyverse, RColorBrewer) \noptions(warn=-1)\n\njson_text &lt;- readLines(\"data/mc3.json\")\njson_text_fixed &lt;- gsub(\"NaN\", \"null\", json_text)\nwriteLines(json_text_fixed, \"data/mc3_fixed.json\")\nmc3_data &lt;- fromJSON(\"data/mc3_fixed.json\")\n\n\n\n\nNodes and Edges overview\n\nNodesEdges\n\n\n\n\nShow code\nmc3_nodes &lt;- as_tibble(mc3_data$nodes)\nglimpse(mc3_nodes)\n\n\nRows: 60,520\nColumns: 15\n$ type                &lt;chr&gt; \"Entity.Organization.Company\", \"Entity.Organizatio…\n$ country             &lt;chr&gt; \"Uziland\", \"Mawalara\", \"Uzifrica\", \"Islavaragon\", …\n$ ProductServices     &lt;chr&gt; \"Unknown\", \"Furniture and home accessories\", \"Food…\n$ PointOfContact      &lt;chr&gt; \"Rebecca Lewis\", \"Michael Lopez\", \"Steven Robertso…\n$ HeadOfOrg           &lt;chr&gt; \"Émilie-Susan Benoit\", \"Honoré Lemoine\", \"Jules La…\n$ founding_date       &lt;chr&gt; \"1954-04-24T00:00:00\", \"2009-06-12T00:00:00\", \"202…\n$ revenue             &lt;dbl&gt; 5994.73, 71766.67, 0.00, 0.00, 4746.67, 46566.67, …\n$ TradeDescription    &lt;chr&gt; \"Unknown\", \"Abbott-Gomez is a leading manufacturer…\n$ `_last_edited_by`   &lt;chr&gt; \"Pelagia Alethea Mordoch\", \"Pelagia Alethea Mordoc…\n$ `_last_edited_date` &lt;chr&gt; \"2035-01-01T00:00:00\", \"2035-01-01T00:00:00\", \"203…\n$ `_date_added`       &lt;chr&gt; \"2035-01-01T00:00:00\", \"2035-01-01T00:00:00\", \"203…\n$ `_raw_source`       &lt;chr&gt; \"Existing Corporate Structure Data\", \"Existing Cor…\n$ `_algorithm`        &lt;chr&gt; \"Automatic Import\", \"Automatic Import\", \"Automatic…\n$ id                  &lt;chr&gt; \"Abbott, Mcbride and Edwards\", \"Abbott-Gomez\", \"Ab…\n$ dob                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\nOnly type, and id are selected.\n\n\nShow code\nmc3_nodes &lt;- as_tibble(mc3_data$nodes) %&gt;%\n  mutate(id=as.character(id), \n         type=as.character(type)) %&gt;%\n  select(id, type)\n\n\nBelow is the distribution of type column in nodes. It indicates that most entities are person, with some companies and CEOs. Other entities are negligible.\n\nmc3_nodes$type %&gt;% unique()\n\n[1] \"Entity.Organization.Company\"         \n[2] \"Entity.Organization.LogisticsCompany\"\n[3] \"Entity.Organization.FishingCompany\"  \n[4] \"Entity.Organization.FinancialCompany\"\n[5] \"Entity.Organization.NewsCompany\"     \n[6] \"Entity.Organization.NGO\"             \n[7] \"Entity.Person\"                       \n[8] \"Entity.Person.CEO\"                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nmc3_edges &lt;- as_tibble(mc3_data$links)\nhead(mc3_edges)\n\n\n# A tibble: 6 × 11\n  start_date          type   `_last_edited_by` `_last_edited_date` `_date_added`\n  &lt;chr&gt;               &lt;chr&gt;  &lt;chr&gt;             &lt;chr&gt;               &lt;chr&gt;        \n1 2016-10-29T00:00:00 Event… Pelagia Alethea … 2035-01-01T00:00:00 2035-01-01T0…\n2 2035-06-03T00:00:00 Event… Niklaus Oberon    2035-07-15T00:00:00 2035-07-15T0…\n3 2028-11-20T00:00:00 Event… Pelagia Alethea … 2035-01-01T00:00:00 2035-01-01T0…\n4 2024-09-04T00:00:00 Event… Pelagia Alethea … 2035-01-01T00:00:00 2035-01-01T0…\n5 2034-11-12T00:00:00 Event… Pelagia Alethea … 2035-01-01T00:00:00 2035-01-01T0…\n6 2007-04-06T00:00:00 Event… Pelagia Alethea … 2035-01-01T00:00:00 2035-01-01T0…\n# ℹ 6 more variables: `_raw_source` &lt;chr&gt;, `_algorithm` &lt;chr&gt;, source &lt;chr&gt;,\n#   target &lt;chr&gt;, key &lt;int&gt;, end_date &lt;chr&gt;\n\n\n\n\n\n\n\n\n\n\nShow code\nmc3_edges &lt;- as_tibble(mc3_data$links) %&gt;%\n  distinct() %&gt;%\n  mutate(source = as.character(source), target=as.character(target), \n         type = as.character(type),  start_date=as.Date(start_date), \n         end_date=as.Date(end_date)) %&gt;%\n  select(type, source, target, start_date, end_date) %&gt;%\n  group_by(source, target, type) %&gt;% \n  summarise(weights = n()) %&gt;% \n  filter(source != target) %&gt;%\n  ungroup()\n\n\nBelow is the distribution of Type column in edges. It indicates that family relationship is negligible.\n\n\nShow code\nmc3_edges$type %&gt;% unique()\n\n\n[1] \"Event.Owns.Shareholdership\"      \"Event.WorksFor\"                 \n[3] \"Event.Owns.BeneficialOwnership\"  \"Relationship.FamilyRelationship\""
  },
  {
    "objectID": "assignment_3.html#graph",
    "href": "assignment_3.html#graph",
    "title": "Take Home Assignment 3",
    "section": "Graph",
    "text": "Graph\nStart with the entity with highest number. Sharon Moon\n\n\nShow code\nmc3_graph &lt;- tbl_graph(nodes = mc3_nodes,\n                       edges = mc3_edges,\n                       directed = FALSE) %&gt;% \n  mutate(betweenness_centrality = centrality_betweenness(), \n         closeness_centrality=centrality_closeness())\n\n\n\n\nShow code\ndisplay_graph &lt;- function() {\n  # extract node with highest betweenness centrality\n  top1_betw &lt;- mc3_graph %&gt;% \n    activate(nodes) %&gt;% \n    as_tibble() %&gt;% \n    top_n(1, betweenness_centrality) %&gt;% \n      select(id, type)\n  \n  # extract lvl 1 edges\n  top1_betw_edges_lvl1 &lt;- mc3_edges %&gt;% \n    filter(source %in% top1_betw[[\"id\"]] | target %in% top1_betw[[\"id\"]])\n  \n  # extract nodes from lvl 1 edges\n  id1 &lt;- top1_betw_edges_lvl1 %&gt;%\n    select(source) %&gt;%\n    rename(id = source) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  id2 &lt;- top1_betw_edges_lvl1 %&gt;%\n    select(target) %&gt;%\n    rename(id = target) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  additional_nodes_lvl1 &lt;- rbind(id1, id2) %&gt;% \n    distinct %&gt;% \n    filter(!id %in% top1_betw[[\"id\"]])\n  \n  # extract lvl 2 edges\n  top1_betw_edges_lvl2 &lt;- mc3_edges %&gt;% \n    filter(source %in% additional_nodes_lvl1[[\"id\"]] | target %in% additional_nodes_lvl1[[\"id\"]])\n  \n  # extract nodes from lvl 1 edges\n  id1 &lt;- top1_betw_edges_lvl2 %&gt;%\n    select(source) %&gt;%\n    rename(id = source) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  id2 &lt;- top1_betw_edges_lvl2 %&gt;%\n    select(target) %&gt;%\n    rename(id = target) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  additional_nodes_lvl2 &lt;- rbind(id1, id2) %&gt;% \n    distinct %&gt;% \n    filter(!id %in% top1_betw[[\"id\"]] & !id %in% additional_nodes_lvl1[[\"id\"]])\n  \n  # combine all nodes\n  top1_betw_nodes &lt;- rbind(top1_betw, additional_nodes_lvl1, additional_nodes_lvl2) %&gt;%\n    distinct()\n  \n  # combine all edges\n  top1_betw_edges &lt;- rbind(top1_betw_edges_lvl1, top1_betw_edges_lvl2) %&gt;% \n    distinct()\n  \n  # colur palatte for betweenness centrality colours\n  sw_colors &lt;- colorRampPalette(brewer.pal(3, \"RdBu\"))(3)\n  \n  # customise edges for plotting\n  top1_betw_edges &lt;- top1_betw_edges %&gt;% \n    rename(from = source,\n           to = target) %&gt;% \n    mutate(title = paste0(\"Type: \", type), # tooltip when hover over\n           color = \"#0085AF\") # color of edge\n  \n  # customise nodes for plotting\n  top1_betw_nodes &lt;- top1_betw_nodes %&gt;% \n    rename(group = type) %&gt;% \n    mutate(id.type = ifelse(id == top1_betw[[\"id\"]], sw_colors[1], sw_colors[2])) %&gt;%\n    mutate(title = paste0(id, \"&lt;br&gt;Group: \", group), # tooltip when hover over\n           size = 30, # set size of nodes\n           color.border = \"#013848\", # border colour of nodes\n           color.background = id.type, # background colour of nodes\n           color.highlight.background = \"#FF8000\" # background colour of nodes when highlighted\n           )\n\n  # plot graph\n  visNetwork(top1_betw_nodes, top1_betw_edges,\n             height = \"700px\", width = \"100%\",\n             main = paste0(\"Network Graph of \", top1_betw[[\"id\"]])) %&gt;%\n    visIgraphLayout() %&gt;%\n    visGroups(groupname = \"Entity.Organization.Company\", shape = \"triangle\") %&gt;%\n    visGroups(groupname = \"Entity.Organization.FishingCompany\", shape = \"triangle\") %&gt;%\n    visGroups(groupname = \"Entity.Person\", shape = \"circle\") %&gt;%  \n    visGroups(groupname = \"Entity.Person.CEO\", shape = \"circle\") %&gt;%  \n    visOptions(selectedBy = \"group\",\n               highlightNearest = list(enabled = T, degree = 1, hover = T),\n               nodesIdSelection = FALSE) %&gt;% \n    visLayout(randomSeed = 123)\n\n}\n\ndisplay_graph()"
  },
  {
    "objectID": "assignment_3.html#visualization-with-time",
    "href": "assignment_3.html#visualization-with-time",
    "title": "Take Home Assignment 3",
    "section": "Visualization With Time",
    "text": "Visualization With Time\n\n\nShow code\nmc3_edges &lt;- as_tibble(mc3_data$links) %&gt;%\n  mutate(source = as.character(source), target=as.character(target), \n         type = as.character(type),  start_date=as.Date(start_date), \n         end_date=as.Date(end_date)) %&gt;%\n  select(type, source, target, start_date, end_date)\n\nmc3_edges$year &lt;- as.integer(format(mc3_edges$start_date, \"%Y\"))\n\n\nThe year range for start time of activity: 1952 to 2035\n\nmin(mc3_edges$year, na.rm=TRUE)\n\n[1] 1952\n\nmax(mc3_edges$year, na.rm=TRUE)\n\n[1] 2035\n\n\n\n\nShow code\ndisplay_graph_with_time &lt;- function(entity_id, end_year) {\n  mc3_edges &lt;- as_tibble(mc3_data$links) %&gt;%\n    mutate(source = as.character(source), target=as.character(target), \n           type = as.character(type),  start_date=as.Date(start_date), \n           end_date=as.Date(end_date)) %&gt;%\n    select(type, source, target, start_date, end_date)\n    \n  mc3_edges$year &lt;- as.integer(format(mc3_edges$start_date, \"%Y\"))\n  mc3_edges &lt;- mc3_edges %&gt;% \n    filter(year&lt;=end_year) %&gt;%\n    group_by(source, target, type) %&gt;% \n    summarise(weights = n()) %&gt;% \n    filter(source != target) %&gt;%\n    ungroup()\n  \n  mc3_nodes &lt;- mc3_nodes %&gt;%\n  filter(id %in% c(mc3_edges$source, mc3_edges$target))\n  \n  mc3_graph &lt;- tbl_graph(nodes = mc3_nodes, edges = mc3_edges, directed = FALSE) %&gt;% \n    mutate(betweenness_centrality = centrality_betweenness(), closeness_centrality=centrality_closeness())\n  \n  \n  # extract node with highest betweenness centrality\n  top1_betw &lt;- mc3_nodes %&gt;% \n    filter(id==entity_id)\n  \n  # extract lvl 1 edges\n  top1_betw_edges_lvl1 &lt;- mc3_edges %&gt;% \n    filter(source %in% top1_betw[[\"id\"]] | target %in% top1_betw[[\"id\"]])\n  \n  # extract nodes from lvl 1 edges\n  id1 &lt;- top1_betw_edges_lvl1 %&gt;%\n    select(source) %&gt;%\n    rename(id = source) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  id2 &lt;- top1_betw_edges_lvl1 %&gt;%\n    select(target) %&gt;%\n    rename(id = target) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  additional_nodes_lvl1 &lt;- rbind(id1, id2) %&gt;% \n    distinct %&gt;% \n    filter(!id %in% top1_betw[[\"id\"]])\n  \n  # extract lvl 2 edges\n  top1_betw_edges_lvl2 &lt;- mc3_edges %&gt;% \n    filter(source %in% additional_nodes_lvl1[[\"id\"]] | target %in% additional_nodes_lvl1[[\"id\"]])\n  \n  # extract nodes from lvl 1 edges\n  id1 &lt;- top1_betw_edges_lvl2 %&gt;%\n    select(source) %&gt;%\n    rename(id = source) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  id2 &lt;- top1_betw_edges_lvl2 %&gt;%\n    select(target) %&gt;%\n    rename(id = target) %&gt;% \n    left_join(mc3_nodes, by = \"id\") %&gt;% \n    select(id, type)\n  \n  additional_nodes_lvl2 &lt;- rbind(id1, id2) %&gt;% \n    distinct %&gt;% \n    filter(!id %in% top1_betw[[\"id\"]] & !id %in% additional_nodes_lvl1[[\"id\"]])\n  \n  # combine all nodes\n  top1_betw_nodes &lt;- rbind(top1_betw, additional_nodes_lvl1, additional_nodes_lvl2) %&gt;%\n    distinct()\n  \n  # combine all edges\n  top1_betw_edges &lt;- rbind(top1_betw_edges_lvl1, top1_betw_edges_lvl2) %&gt;% \n    distinct()\n  \n  # colur palatte for betweenness centrality colours\n  sw_colors &lt;- colorRampPalette(brewer.pal(3, \"RdBu\"))(3)\n  \n  # customise edges for plotting\n  top1_betw_edges &lt;- top1_betw_edges %&gt;% \n    rename(from = source,\n           to = target) %&gt;% \n    mutate(title = paste0(\"Type: \", type), # tooltip when hover over\n           color = \"#0085AF\") # color of edge\n  \n  # customise nodes for plotting\n  top1_betw_nodes &lt;- top1_betw_nodes %&gt;% \n    rename(group = type) %&gt;% \n    mutate(id.type = ifelse(id == top1_betw[[\"id\"]], sw_colors[1], sw_colors[2])) %&gt;%\n    mutate(title = paste0(id, \"&lt;br&gt;Group: \", group), # tooltip when hover over\n           size = 30, # set size of nodes\n           color.border = \"#013848\", # border colour of nodes\n           color.background = id.type, # background colour of nodes\n           color.highlight.background = \"#FF8000\" # background colour of nodes when highlighted\n           )\n  \n  visNetwork(top1_betw_nodes, top1_betw_edges,\n           height = \"700px\", width = \"100%\",\n           main = paste0(\"Network Graph of \", entity_id)) %&gt;%\n    visIgraphLayout() %&gt;%\n    visGroups(groupname = \"Entity.Organization.Company\", shape = \"triangle\") %&gt;%\n    visGroups(groupname = \"Entity.Organization.FishingCompany\", shape = \"triangle\") %&gt;%\n    visGroups(groupname = \"Entity.Person\", shape = \"circle\") %&gt;%  \n    visGroups(groupname = \"Entity.Person.CEO\", shape = \"circle\") %&gt;%  \n    visOptions(selectedBy = \"group\", highlightNearest = list(enabled = T, degree = 1, hover = T), nodesIdSelection = FALSE) %&gt;% \n    visLayout(randomSeed = 123)\n}\n\n\n\n2020202520302035\n\n\n\ndisplay_graph_with_time('Sharon Moon', 2020)\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\n\ndisplay_graph_with_time('Sharon Moon', 2025)\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\n\ndisplay_graph_with_time('Sharon Moon', 2030)\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\n\ndisplay_graph_with_time('Sharon Moon', 2035)\n\n`summarise()` has grouped output by 'source', 'target'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\n\nThe display_graph_with_time(entity_id, year) provides a comprehensive way to visualize corporate structure over time. Due to the limitation of quarto, the visualization is not interactive enough, and could be improved further after migrating to shiny app with a time slider.\nIn general, the corporate structure for Sharon Moon expands quite significantly from 2020 to 2030. Besides, the related entities (level 1 and level 2 entities) also expands. However, the growing speed slows down after 2030, probably due to slower growth rate when reaching certain capacity, or the growth of the whole business slows down from 2030 to 2035."
  },
  {
    "objectID": "hands-on/hands_on_10.html",
    "href": "hands-on/hands_on_10.html",
    "title": "Hands-on 10",
    "section": "",
    "text": "pacman::p_load(lubridate, ggthemes, reactable, reactablefmtr, gt, gtExtras, tidyverse, svglite)\n\n\nlibrary(RODBC)\ncon &lt;- odbcConnectAccess2007('../data/Coffee Chain.mdb')\ncoffeechain &lt;- sqlFetch(con, 'CoffeeChain Query')\nwrite_rds(coffeechain, \"../data/CoffeeChain.rds\")\nodbcClose(con)\n\n\ncoffeechain &lt;- read_rds(\"../data/rds/CoffeeChain.rds\")\n\nproduct &lt;- coffeechain %&gt;%\n  group_by(`Product`) %&gt;%\n  summarise(`target` = sum(`Budget Sales`),\n            `current` = sum(`Sales`)) %&gt;%\n  ungroup()\n\nggplot(product, aes(Product, current)) + \n  geom_col(aes(Product, max(target) * 1.01),\n           fill=\"grey85\", width=0.85) +\n  geom_col(aes(Product, target * 0.75),\n           fill=\"grey60\", width=0.85) +\n  geom_col(aes(Product, target * 0.5),\n           fill=\"grey50\", width=0.85) +\n  geom_col(aes(Product, current), \n           width=0.35,\n           fill = \"black\") + \n  geom_errorbar(aes(y = target,\n                    x = Product, \n                    ymin = target,\n                    ymax= target), \n                width = .4,\n                colour = \"red\",\n                size = 1) +\n  coord_flip()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\nsales_report &lt;- coffeechain %&gt;%\n  filter(Date &gt;= \"2013-01-01\") %&gt;%\n  mutate(Month = month(Date)) %&gt;%\n  group_by(Month, Product) %&gt;%\n  summarise(Sales = sum(Sales)) %&gt;%\n  ungroup() %&gt;%\n  select(Month, Product, Sales)\n\n`summarise()` has grouped output by 'Month'. You can override using the\n`.groups` argument.\n\nmins &lt;- group_by(sales_report, Product) %&gt;% \n  slice(which.min(Sales))\nmaxs &lt;- group_by(sales_report, Product) %&gt;% \n  slice(which.max(Sales))\nends &lt;- group_by(sales_report, Product) %&gt;% \n  filter(Month == max(Month))\n\nquarts &lt;- sales_report %&gt;%\n  group_by(Product) %&gt;%\n  summarise(quart1 = quantile(Sales, \n                              0.25),\n            quart2 = quantile(Sales, \n                              0.75)) %&gt;%\n  right_join(sales_report)\n\nJoining with `by = join_by(Product)`\n\n\n\nggplot(sales_report, aes(x=Month, y=Sales)) + \n  facet_grid(Product ~ ., scales = \"free_y\") + \n  geom_ribbon(data = quarts, aes(ymin = quart1, max = quart2), \n              fill = 'grey90') +\n  geom_line(size=0.3) +\n  geom_point(data = mins, col = 'red') +\n  geom_point(data = maxs, col = 'blue') +\n  geom_text(data = mins, aes(label = Sales), vjust = -1) +\n  geom_text(data = maxs, aes(label = Sales), vjust = 2.5) +\n  geom_text(data = ends, aes(label = Sales), hjust = 0, nudge_x = 0.5) +\n  geom_text(data = ends, aes(label = Product), hjust = 0, nudge_x = 1.0) +\n  expand_limits(x = max(sales_report$Month) + \n                  (0.25 * (max(sales_report$Month) - min(sales_report$Month)))) +\n  scale_x_continuous(breaks = seq(1, 12, 1)) +\n  scale_y_continuous(expand = c(0.1, 0)) +\n  theme_tufte(base_size = 3, base_family = \"Helvetica\") +\n  theme(axis.title=element_blank(), axis.text.y = element_blank(), \n        axis.ticks = element_blank(), strip.text = element_blank())\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\nproduct %&gt;%\n  gt::gt() %&gt;%\n  gt_plt_bullet(column = current, \n              target = target, \n              width = 60,\n              palette = c(\"lightblue\", \n                          \"black\")) %&gt;%\n  gt_theme_538()\n\n\n\n\n\n  \n    \n      Product\n      current\n    \n  \n  \n    Amaretto\n          \n    Caffe Latte\n          \n    Caffe Mocha\n          \n    Chamomile\n          \n    Colombian\n          \n    Darjeeling\n          \n    Decaf Espresso\n          \n    Decaf Irish Cream\n          \n    Earl Grey\n          \n    Green Tea\n          \n    Lemon\n          \n    Mint\n          \n    Regular Espresso\n          \n  \n  \n  \n\n\n\n\n\nreport &lt;- coffeechain %&gt;%\n  mutate(Year = year(Date)) %&gt;%\n  filter(Year == \"2013\") %&gt;%\n  mutate (Month = month(Date, \n                        label = TRUE, \n                        abbr = TRUE)) %&gt;%\n  group_by(Product, Month) %&gt;%\n  summarise(Sales = sum(Sales)) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'Product'. You can override using the\n`.groups` argument.\n\n\n\nreport %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\")\n\n# A tibble: 13 × 2\n   Product           `Monthly Sales`\n   &lt;chr&gt;             &lt;list&gt;         \n 1 Amaretto          &lt;dbl [12]&gt;     \n 2 Caffe Latte       &lt;dbl [12]&gt;     \n 3 Caffe Mocha       &lt;dbl [12]&gt;     \n 4 Chamomile         &lt;dbl [12]&gt;     \n 5 Colombian         &lt;dbl [12]&gt;     \n 6 Darjeeling        &lt;dbl [12]&gt;     \n 7 Decaf Espresso    &lt;dbl [12]&gt;     \n 8 Decaf Irish Cream &lt;dbl [12]&gt;     \n 9 Earl Grey         &lt;dbl [12]&gt;     \n10 Green Tea         &lt;dbl [12]&gt;     \n11 Lemon             &lt;dbl [12]&gt;     \n12 Mint              &lt;dbl [12]&gt;     \n13 Regular Espresso  &lt;dbl [12]&gt;     \n\n\n\nreport %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\") %&gt;%\n   gt() %&gt;%\n   gt_plt_sparkline('Monthly Sales',\n                    same_limit = FALSE)\n\n\n\n\n\n  \n    \n      Product\n      Monthly Sales\n    \n  \n  \n    Amaretto\n          1.2K\n    Caffe Latte\n          1.5K\n    Caffe Mocha\n          3.7K\n    Chamomile\n          3.3K\n    Colombian\n          5.5K\n    Darjeeling\n          3.0K\n    Decaf Espresso\n          3.2K\n    Decaf Irish Cream\n          2.7K\n    Earl Grey\n          3.0K\n    Green Tea\n          1.5K\n    Lemon\n          4.4K\n    Mint\n          1.5K\n    Regular Espresso\n          1.1K\n  \n  \n  \n\n\n\n\n\nreport %&gt;% \n  group_by(Product) %&gt;% \n  summarise(\"Min\" = min(Sales, na.rm = T),\n            \"Max\" = max(Sales, na.rm = T),\n            \"Average\" = mean(Sales, na.rm = T)\n            ) %&gt;%\n  gt() %&gt;%\n  fmt_number(columns = 4,\n    decimals = 2)\n\n\n\n\n\n  \n    \n      Product\n      Min\n      Max\n      Average\n    \n  \n  \n    Amaretto\n1016\n1210\n1,119.00\n    Caffe Latte\n1398\n1653\n1,528.33\n    Caffe Mocha\n3322\n3828\n3,613.92\n    Chamomile\n2967\n3395\n3,217.42\n    Colombian\n5132\n5961\n5,457.25\n    Darjeeling\n2926\n3281\n3,112.67\n    Decaf Espresso\n3181\n3493\n3,326.83\n    Decaf Irish Cream\n2463\n2901\n2,648.25\n    Earl Grey\n2730\n3005\n2,841.83\n    Green Tea\n1339\n1476\n1,398.75\n    Lemon\n3851\n4418\n4,080.83\n    Mint\n1388\n1669\n1,519.17\n    Regular Espresso\n890\n1218\n1,023.42\n  \n  \n  \n\n\n\nspark &lt;- report %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\")\n\nsales &lt;- report %&gt;% \n  group_by(Product) %&gt;% \n  summarise(\"Min\" = min(Sales, na.rm = T),\n            \"Max\" = max(Sales, na.rm = T),\n            \"Average\" = mean(Sales, na.rm = T)\n            )\n\nsales_data = left_join(sales, spark)\n\nJoining with `by = join_by(Product)`\n\nsales_data %&gt;%\n  gt() %&gt;%\n  gt_plt_sparkline('Monthly Sales',\n                   same_limit = FALSE)\n\n\n\n\n\n  \n    \n      Product\n      Min\n      Max\n      Average\n      Monthly Sales\n    \n  \n  \n    Amaretto\n1016\n1210\n1119.000\n          1.2K\n    Caffe Latte\n1398\n1653\n1528.333\n          1.5K\n    Caffe Mocha\n3322\n3828\n3613.917\n          3.7K\n    Chamomile\n2967\n3395\n3217.417\n          3.3K\n    Colombian\n5132\n5961\n5457.250\n          5.5K\n    Darjeeling\n2926\n3281\n3112.667\n          3.0K\n    Decaf Espresso\n3181\n3493\n3326.833\n          3.2K\n    Decaf Irish Cream\n2463\n2901\n2648.250\n          2.7K\n    Earl Grey\n2730\n3005\n2841.833\n          3.0K\n    Green Tea\n1339\n1476\n1398.750\n          1.5K\n    Lemon\n3851\n4418\n4080.833\n          4.4K\n    Mint\n1388\n1669\n1519.167\n          1.5K\n    Regular Espresso\n890\n1218\n1023.417\n          1.1K\n  \n  \n  \n\n\n\n\nReflection:\nConnect to database and display data in report format"
  },
  {
    "objectID": "hands-on/hands_on_3.html",
    "href": "hands-on/hands_on_3.html",
    "title": "Hands-on 3",
    "section": "",
    "text": "Programming Interactive Data Visualisation\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\nexam_data &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nWith Plotly\n\nplot_ly(data = exam_data, x = ~MATHS, y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReflections:\nThe key takeaway from this exercise is interactivity. Basically, it means different behaviors (show tips, open new page) when different actions (on click, on hover) occur.\n\n\nProgramming Animated Statistical Graphics\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"../data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(col, as.factor)`.\nCaused by warning:\n! Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(col)\n\n  # Now:\n  data %&gt;% select(all_of(col))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\n\n\n\n\n\n\nReflection:\nThe animation of visualization looks good, but may take some time to load it."
  },
  {
    "objectID": "hands-on/hands_on_5.html",
    "href": "hands-on/hands_on_5.html",
    "title": "Hands-on 5",
    "section": "",
    "text": "pacman::p_load(tidytext, widyr, wordcloud, DT, ggwordcloud, textplot, lubridate, hms,\ntidyverse, tidygraph, ggraph, igraph)\n\n\nnews20 &lt;- \"../data/20news/\"\n\n\nread_folder &lt;- function(infolder) {\n  tibble(file = dir(infolder, \n                    full.names = TRUE)) %&gt;%\n    mutate(text = map(file, \n                      read_lines)) %&gt;%\n    transmute(id = basename(file), \n              text) %&gt;%\n    unnest(text)\n}\n\nraw_text &lt;- tibble(folder = \n                     dir(news20, \n                         full.names = TRUE)) %&gt;%\n  mutate(folder_out = map(folder, \n                          read_folder)) %&gt;%\n  unnest(cols = c(folder_out)) %&gt;%\n  transmute(newsgroup = basename(folder), \n            id, text)\nwrite_rds(raw_text, \"../data/rds/news20.rds\")\n\n\nraw_text &lt;- read_rds(\"../data/rds/news20.rds\")\nraw_text %&gt;%\n  group_by(newsgroup) %&gt;%\n  summarize(messages = n_distinct(id)) %&gt;%\n  ggplot(aes(messages, newsgroup)) +\n  geom_col(fill = \"lightblue\") +\n  labs(y = NULL)\n\n\n\n\n\ncleaned_text &lt;- raw_text %&gt;%\n  group_by(newsgroup, id) %&gt;%\n  filter(cumsum(text == \"\") &gt; 0,\n         cumsum(str_detect(\n           text, \"^--\")) == 0) %&gt;%\n  ungroup()\n\n\ncleaned_text &lt;- cleaned_text %&gt;%\n  filter(str_detect(text, \"^[^&gt;]+[A-Za-z\\\\d]\")\n         | text == \"\",\n         !str_detect(text, \n                     \"writes(:|\\\\.\\\\.\\\\.)$\"),\n         !str_detect(text, \n                     \"^In article &lt;\")\n  )\n\n\nusenet_words &lt;- cleaned_text %&gt;%\n  unnest_tokens(word, text) %&gt;%\n  filter(str_detect(word, \"[a-z']$\"),\n         !word %in% stop_words$word)\nusenet_words %&gt;%\n  count(word, sort = TRUE)\n\n# A tibble: 5,542 × 2\n   word           n\n   &lt;chr&gt;      &lt;int&gt;\n 1 people        57\n 2 time          50\n 3 jesus         47\n 4 god           44\n 5 message       40\n 6 br            27\n 7 bible         23\n 8 drive         23\n 9 homosexual    23\n10 read          22\n# ℹ 5,532 more rows\n\n\n\nwords_by_newsgroup &lt;- usenet_words %&gt;%\n  count(newsgroup, word, sort = TRUE) %&gt;%\n  ungroup()\n\n\nwordcloud(words_by_newsgroup$word,\n          words_by_newsgroup$n,\n          max.words = 300)\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): homosexuals could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): punishment could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): women could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): deaths could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): plaintext could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): jesus could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): science could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): bits could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): generator could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): client_data could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): sexual could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): stream could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): display could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): canuck could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): eeeee could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): osfselect could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): message could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): warning could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): xtvacreatemanagedwidget could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): wm_save_yourself could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): matthew could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): disciples could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): car could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): people could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): address could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): innocent could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): john could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): prophet could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): notice_shell could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): eternal could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): ideal could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): agree could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): cast could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): jets could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): drive could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): jews could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): angels could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): earth could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): peter could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): urban could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): people could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): mark could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): christians could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): special could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): jeruselem could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): keysym could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): random could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): eternity could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): islam could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): bit could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): mac could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): bible could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): truth could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): book could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): cock could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): steve could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): wicked could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): book could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): god could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): null could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): serdar could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): looked could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): relationship could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): systems could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): osfcancel could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): hinnom could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): drawn could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): window could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): human could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): thou could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): application could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): told could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): armenians could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): change could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): adults could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): sink could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): rev could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): bike could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): post could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): modem could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): canucks could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): fire could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): doctor could not be fit on page. It will not be plotted.\n\n\nWarning in wordcloud(words_by_newsgroup$word, words_by_newsgroup$n, max.words =\n300): software could not be fit on page. It will not be plotted.\n\n\n\n\n\n\ntf_idf &lt;- words_by_newsgroup %&gt;%\n  bind_tf_idf(word, newsgroup, n) %&gt;%\n  arrange(desc(tf_idf))\n\n\nDT::datatable(tf_idf, filter = 'top') %&gt;% \n  formatRound(columns = c('tf', 'idf', \n                          'tf_idf'), \n              digits = 3) %&gt;%\n  formatStyle(0, \n              target = 'row', \n              lineHeight='25%')\n\n\n\n\n\n\n\ntf_idf %&gt;%\n  filter(str_detect(newsgroup, \"^sci\\\\.\")) %&gt;%\n  group_by(newsgroup) %&gt;%\n  slice_max(tf_idf, \n            n = 12) %&gt;%\n  ungroup() %&gt;%\n  mutate(word = reorder(word, \n                        tf_idf)) %&gt;%\n  ggplot(aes(tf_idf, \n             word, \n             fill = newsgroup)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ newsgroup, \n             scales = \"free\") +\n  labs(x = \"tf-idf\", \n       y = NULL)\n\n\n\n\n\nnewsgroup_cors &lt;- words_by_newsgroup %&gt;%\n  pairwise_cor(newsgroup, \n               word, \n               n, \n               sort = TRUE)\n\n\nnewsgroup_cors &lt;- words_by_newsgroup %&gt;%\n  pairwise_cor(newsgroup, \n               word, \n               n, \n               sort = TRUE)\n\n\nset.seed(2017)\n\nnewsgroup_cors %&gt;%\n  filter(correlation &gt; .025) %&gt;%\n  graph_from_data_frame() %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(alpha = correlation, \n                     width = correlation)) +\n  geom_node_point(size = 6, \n                  color = \"lightblue\") +\n  geom_node_text(aes(label = name),\n                 color = \"red\",\n                 repel = TRUE) +\n  theme_void()\n\nWarning: The `trans` argument of `continuous_scale()` is deprecated as of ggplot2 3.5.0.\nℹ Please use the `transform` argument instead.\n\n\n\n\n\nReflection:\nLearned some basic text processing techniques in R"
  },
  {
    "objectID": "hands-on/hands_on_7.html",
    "href": "hands-on/hands_on_7.html",
    "title": "Hands-on 7",
    "section": "",
    "text": "Visualising and Analysing Time-oriented Data\n\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\nattacks &lt;- read_csv(\"../data/eventlog.csv\")\n\nRows: 199999 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): source_country, tz\ndttm (1): timestamp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\nair &lt;- read_excel(\"../data/arrivals_by_air.xlsx\")\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\nrice &lt;- read_csv(\"../data/rice.csv\")\n\nRows: 550 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Country\ndbl (3): Year, Yield, Production\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Dr. Kam Tin Seong\")\n\n\nConverting 'Year' to an ordered factor\n\n\n\n\n\nReflections:\nlearn how to plot different graphs (heatmaps, cycle plot, slopegraph) to visualize temperol patterns."
  },
  {
    "objectID": "hands-on/hands_on_9.html",
    "href": "hands-on/hands_on_9.html",
    "title": "Hands-on 9",
    "section": "",
    "text": "Creating Ternary Plot\n\npacman::p_load(plotly, ggtern, tidyverse)\n\n\n#Reading the data into R environment\npop_data &lt;- read_csv(\"../data/respopagsex2000to2018_tidy.csv\") \n\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n\nNo scatterternary mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\n\nVisual Correlation Analysis\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)\nwine &lt;- read_csv(\"../data/wine_quality.csv\")\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npairs(wine[,1:11])\n\n\n\n\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\nWarning in par(usr): argument 1 does not name a graphical parameter\n\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\nwine.cor &lt;- cor(wine[, 1:11])\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)\n\n\n\n\n\n\nHeatmap for Visualising and Analysing Multivariate Data\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\nwh &lt;- read_csv(\"../data/WHData-2018.csv\")\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrow.names(wh) &lt;- wh$Country\n\nWarning: Setting row names on a tibble is deprecated.\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\nVisual Multivariate Analysis with Parallel Coordinates Plot\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\n\nwh &lt;- read_csv(\"../data/WHData-2018.csv\")\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "in-class/In-class_Ex02.html",
    "href": "in-class/In-class_Ex02.html",
    "title": "In-class 2",
    "section": "",
    "text": "pacman::p_load(tidyverse, ggdist, ggthemes, ggridges, colorspace)\nexam_df &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggplot(exam_df, aes(x=ENGLISH)) +\n  geom_histogram(color = \"#1696d2\",\n               adjust = 0.65,\n               alpha = 0.6)\n\nWarning in geom_histogram(color = \"#1696d2\", adjust = 0.65, alpha = 0.6):\nIgnoring unknown parameters: `adjust`\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nggplot(exam_df, aes(x=ENGLISH)) +\n  geom_density(color = \"#1696d2\",\n               adjust = 0.65,\n               alpha = 0.6,)\n\n\n\n\n\nmedian_eng &lt;- median(exam_df$ENGLISH)\nmean_eng &lt;- mean(exam_df$ENGLISH)\nstd_eng &lt;- sd(exam_df$ENGLISH)\n\nggplot(exam_df, aes(x=ENGLISH)) +\n  geom_density(color = \"#1696d2\",\n               adjust = 0.65,\n               alpha = 0.6,) +\n  stat_function(\n    fun=dnorm,\n    args = list(mean=mean_eng, sd = std_eng),\n    col = \"grey30\",\n    size = 0.8)+\n    geom_vline(aes(xintercept=mean_eng), color = \"#4d5887\", linewidth = 0.6, linetype = \"dashed\")+\n  annotate(geom = \"text\",\n           x = mean_eng - 10,\n           y = 0.04,\n           label = paste0(\"Mean ENGLISH:\", round(mean_eng), 2),\n           color = \"#4d5887\") +\n  geom_vline(aes(xintercept=median_eng), color = \"#4d5887\", linewidth = 0.6) +\n  annotate(geom = \"text\",\n           x = median_eng + 10,\n           y = 0.04,\n           label = paste0(\"Median ENGLISH:\", round(median_eng), 2),\n           color = \"#4d5887\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "in-class/In-class_Ex04.html",
    "href": "in-class/In-class_Ex04.html",
    "title": "In-class 4",
    "section": "",
    "text": "pacman::p_load(tidyverse, ggstatsplot)\nexam &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nset.seed(1234)\ngghistostats(data=exam, \n             x=ENGLISH, \n             type=\"parametric\", \n             test.value=60, \n             bin.args=list(color = \"black\", \n                           fill = \"grey50\", \n                           alpha=0.7), \n             normal.curve = FALSE, \n             normal.curve.args = list(linewidth=2), \n             xlab=\"English scores\")\n\n\n\n\n\nset.seed(1234)\ngghistostats(data=exam, \n             x=ENGLISH, \n             type=\"np\", \n             test.value=60, \n             bin.args=list(color = \"black\", \n                           fill = \"grey50\", \n                           alpha=0.7), \n             normal.curve = FALSE, \n             normal.curve.args = list(linewidth=2), \n             xlab=\"English scores\")\n\n\n\n\n\nexam_long = exam %&gt;%\n  pivot_longer(\n    cols = ENGLISH:SCIENCE,\n    names_to = \"SUBJECT\",\n    values_to = \"SCORES\") %&gt;%\n  filter(CLASS == \"3A\")\n\nhead(exam_long)\n\n# A tibble: 6 × 6\n  ID         CLASS GENDER RACE    SUBJECT SCORES\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;    &lt;dbl&gt;\n1 Student026 3A    Male   Chinese ENGLISH     68\n2 Student026 3A    Male   Chinese MATHS       87\n3 Student026 3A    Male   Chinese SCIENCE     66\n4 Student021 3A    Male   Chinese ENGLISH     70\n5 Student021 3A    Male   Chinese MATHS       90\n6 Student021 3A    Male   Chinese SCIENCE     72\n\n\n\nggwithinstats(\n  data= filter(exam_long, \n               SUBJECT %in% \n                 c(\"MATHS\", \"SCIENCE\")),\n  x = SUBJECT,\n  y = SCORES,\n  type = \"p\"\n)\n\nWarning in min(x): no non-missing arguments to min; returning Inf\n\n\nWarning in max(x): no non-missing arguments to max; returning -Inf\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  label.var = ID,\n  label.expression = ENGLISH &gt; 90 & MATHS &gt; 90\n)\n\nRegistered S3 method overwritten by 'ggside':\n  method from   \n  +.gg   ggplot2\n\n\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "in-class/In-class_Ex06.html",
    "href": "in-class/In-class_Ex06.html",
    "title": "In-class 6",
    "section": "",
    "text": "pacman::p_load(corporaexplorer, tidyverse, stringi, rvest)\n\n\nbible &lt;- readr::read_lines(\"http://www.gutenberg.org/cache/epub/10/pg10.txt\")\n\n\nbible &lt;- paste(bible, collapse = \"\\n\")\nstart_v &lt;- stri_locate_first_fixed(bible, \"The First Book of Moses: Called Genesis\")[1]\nend_v &lt;- stri_locate_last_fixed(bible, \"Amen.\")[2]\nbible &lt;- stri_sub(bible, start_v, end_v)\nbooks &lt;- stri_split_regex(bible, \"\\n{5}\") %&gt;%\n    unlist %&gt;%\n    .[-40]  \n\nbooks &lt;- str_replace_all(books, \"\\n{2,}\", \"NEW_PARAGRAPH\") %&gt;%\n    str_replace_all(\"\\n\", \" \") %&gt;%\n    str_replace_all(\"NEW_PARAGRAPH\", \"\\n\\n\")\nbooks &lt;- books[3:68]\n\nchapters &lt;- str_replace_all(books, \"(\\\\d+:1 )\", \"NEW_CHAPTER\\\\1\") %&gt;%\n    stri_split_regex(\"NEW_CHAPTER\")\n\nchapters &lt;- lapply(chapters, function(x) x[-1])\n\nbook_titles &lt;- read_html(\"https://www.esv.org/resources/esv-global-study-bible/list-of-abbreviations\") %&gt;%\n  html_nodes(\"td:nth-child(1)\") %&gt;%\n  html_text() %&gt;%\n  .[13:78]\n\ntestament &lt;- c(rep(\"Old\", 39), rep(\"New\", 27))\n\n\nbible_df &lt;- tibble::tibble(Text = chapters,\n                           Book = book_titles,\n                           Testament = testament)\n\nbible_df &lt;- tidyr::unnest(bible_df, Text)\n\n\nKJB &lt;- prepare_data(dataset = bible_df,\n                    date_based_corpus = FALSE,\n                    grouping_variable = \"Book\",\n                    columns_doc_info = c(\"Testament\", \"Book\"))\n\nStarting.\n\n\nDocument data frame done.\n\n\nCorpus is not date based. Calendar data frame skipped.\n\n\nDocument term matrix: text processed.\n\n\nDocument term matrix: tokenising completed.\n\n\nDocument term matrix: word list created.\n\n\nDocument term matrix done.\n\n\nDone.\n\nexplore(KJB)\n\nExploring 1,175 documents\n\n\nLoading required package: shiny\n\n\nPhantomJS not found. You can install it with webshot::install_phantomjs(). If it is installed, please make sure the phantomjs executable can be found via the PATH variable.\n\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "in-class/In-class_Ex09.html",
    "href": "in-class/In-class_Ex09.html",
    "title": "In-class 9",
    "section": "",
    "text": "pacman::p_load(scatterPlotMatrix, parallelPlot, cluster, factoextra, tidyverse)\n\n\nwine &lt;- read_csv(\"../data/wine_quality.csv\")\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggplot(data = wine, aes(x=type)) + geom_bar()\n\n\n\n\n\nwhitewine &lt;- wine %&gt;%\n  filter(type == \"white\") %&gt;%\n  select(c(1:11))\n\n\nscatterPlotMatrix(whitewine,\n                  corrPlotType = \"Text\",\n                  distribType = 1,\n                  rotateTitle = TRUE,\n                  width=500,\n                  height=500)\n\n\n\n\n\n\nset.seed(123)\nkmeans4 &lt;- kmeans(whitewine, 4, nstart=25)\nprint(kmeans4)\n\nK-means clustering with 4 clusters of sizes 757, 978, 1444, 1719\n\nCluster means:\n  fixed acidity volatile acidity citric acid residual sugar  chlorides\n1      6.981506        0.2965786   0.3563540       9.705878 0.05227081\n2      6.805112        0.2759356   0.3168814       3.607822 0.04012781\n3      6.908172        0.2776939   0.3455402       7.780852 0.04919668\n4      6.782403        0.2719372   0.3247469       5.348342 0.04324549\n  free sulfur dioxide total sulfur dioxide   density       pH sulphates\n1            52.83421             206.8164 0.9965522 3.176975 0.5179392\n2            20.52761              83.1411 0.9919192 3.175256 0.4707566\n3            42.31129             160.3061 0.9951215 3.193996 0.4940651\n4            30.11635             121.1963 0.9931958 3.195829 0.4847935\n    alcohol\n1  9.611471\n2 11.233930\n3 10.120392\n4 10.833256\n\nClustering vector:\n   [1] 3 4 2 1 1 2 4 3 4 4 2 4 2 3 3 4 2 2 3 4 2 2 4 3 4 1 3 4 4 4 4 2 2 4 3 4 3\n  [38] 4 3 3 3 3 3 3 3 3 1 1 3 3 3 4 2 4 4 1 1 3 2 4 4 3 3 2 4 4 4 3 2 4 1 1 1 2\n  [75] 2 4 2 2 4 4 4 3 3 1 3 3 3 1 3 3 3 1 4 4 3 1 3 2 2 3 1 3 3 3 1 4 3 3 3 1 3\n [112] 1 1 3 3 2 4 2 1 1 2 4 4 4 3 3 4 1 3 3 2 1 1 1 1 3 4 3 2 2 2 3 4 2 2 4 3 2\n [149] 2 4 3 3 4 2 2 1 1 4 4 4 4 3 2 1 1 3 1 2 3 4 4 2 2 4 3 3 2 3 4 3 3 1 3 1 1\n [186] 1 3 4 4 1 1 3 4 4 1 1 1 1 1 1 1 1 1 4 4 3 4 4 2 3 2 4 4 4 4 3 3 3 3 3 3 3\n [223] 4 3 4 3 1 1 1 3 4 1 1 1 1 1 1 1 4 3 1 2 2 1 3 1 4 2 2 4 1 1 3 4 3 3 2 2 4\n [260] 2 4 3 2 1 3 3 3 3 3 3 3 3 3 4 1 3 3 2 2 4 4 4 1 1 1 3 1 1 1 1 1 3 1 3 3 3\n [297] 3 1 3 4 2 2 2 3 3 3 3 3 4 3 2 3 3 3 3 4 4 4 4 2 2 4 4 4 1 1 1 3 1 2 4 4 2\n [334] 4 2 2 4 3 4 3 3 4 4 3 3 4 2 3 4 3 3 4 4 4 1 1 1 3 3 3 3 2 4 1 2 4 3 3 3 2\n [371] 3 3 1 3 2 2 4 2 3 4 2 3 3 3 4 2 4 1 4 1 1 2 4 2 3 3 2 4 3 2 4 3 4 1 3 3 4\n [408] 4 4 2 3 3 2 2 3 3 2 1 2 4 4 1 1 1 3 1 1 1 2 1 1 2 1 3 4 2 1 1 1 4 2 4 4 1\n [445] 3 2 3 4 4 4 3 4 3 4 4 4 2 4 1 1 4 3 3 2 3 4 3 2 3 1 3 1 2 4 4 1 4 4 3 3 3\n [482] 4 4 3 1 4 4 2 3 3 2 2 3 3 4 3 1 3 3 1 1 3 1 1 3 3 4 3 3 3 3 3 4 2 4 3 3 3\n [519] 2 2 4 4 2 2 2 4 2 4 4 4 4 3 3 3 3 3 3 3 2 1 3 1 3 3 3 3 3 2 4 1 3 2 4 3 4\n [556] 2 3 4 3 3 3 4 3 4 3 2 2 3 3 3 1 4 3 3 4 1 1 3 4 4 1 4 3 2 4 2 3 4 4 4 4 4\n [593] 3 4 4 4 3 4 4 2 3 4 4 4 4 4 3 3 3 2 4 2 4 4 4 4 2 1 1 4 1 3 4 2 4 4 3 1 1\n [630] 2 3 3 4 1 3 4 4 3 1 1 4 1 1 3 3 3 3 3 1 1 1 1 1 4 3 4 2 4 1 1 2 4 3 2 3 4\n [667] 1 3 3 1 1 2 3 4 1 1 1 2 2 2 3 3 3 3 3 1 4 1 1 4 4 1 1 3 1 1 2 1 1 1 1 4 2\n [704] 4 4 2 1 3 4 2 3 4 4 1 1 3 1 3 3 4 3 3 4 2 4 4 4 2 3 3 4 1 2 3 1 4 3 1 3 4\n [741] 2 2 4 3 3 4 1 3 3 3 3 3 3 1 4 4 3 3 3 4 3 3 1 4 3 4 1 2 4 4 4 3 3 3 4 4 2\n [778] 1 3 3 2 1 3 3 1 4 4 4 4 4 4 2 3 2 3 3 1 3 4 2 3 1 1 3 4 3 1 1 1 1 1 4 3 3\n [815] 1 4 2 4 4 4 2 1 4 4 2 3 3 4 2 2 4 3 4 2 4 4 3 3 3 4 4 3 3 4 4 4 3 2 3 4 4\n [852] 3 4 3 4 4 3 3 3 3 4 1 3 4 3 4 4 3 3 2 3 3 4 2 2 4 4 4 4 4 4 4 4 4 1 4 3 2\n [889] 3 2 3 4 4 4 4 2 1 2 2 1 3 4 1 1 3 2 2 4 3 1 4 4 4 2 2 2 4 4 4 4 3 3 3 1 3\n [926] 2 2 3 3 4 2 1 1 1 1 1 2 4 1 1 1 1 2 4 4 4 1 3 2 2 4 4 2 4 4 4 4 2 2 3 3 4\n [963] 3 4 3 2 1 3 2 2 2 4 3 2 4 4 4 1 3 2 2 3 2 2 3 4 3 3 3 4 3 2 1 2 3 3 2 3 3\n[1000] 3 2 1 1 4 3 2 3 2 1 3 4 3 2 1 3 4 4 4 3 1 4 4 1 3 3 4 3 2 4 1 3 1 1 1 1 3\n[1037] 2 2 4 2 4 2 4 1 2 2 4 2 2 4 3 4 2 4 2 4 4 1 4 3 4 1 1 1 3 4 3 4 2 3 3 4 4\n[1074] 1 3 4 3 4 1 1 4 3 3 1 4 3 4 4 1 4 1 3 3 4 1 2 3 4 4 4 3 4 3 4 3 1 4 2 2 3\n[1111] 2 2 3 2 2 2 2 1 2 4 4 4 2 4 4 3 3 2 2 4 3 4 3 4 4 3 3 3 4 2 2 3 4 4 4 1 3\n[1148] 3 4 1 1 1 2 2 3 3 4 4 1 4 3 4 3 1 2 4 2 4 2 3 4 4 4 4 1 3 1 3 3 4 4 4 4 4\n[1185] 4 1 3 4 3 2 4 4 4 4 1 3 4 4 4 2 2 2 1 2 2 1 3 1 4 4 2 3 3 2 2 3 2 1 4 2 1\n[1222] 4 4 3 4 2 4 4 4 2 1 4 2 4 3 1 2 4 4 3 3 3 3 4 4 1 3 2 2 1 3 3 3 3 3 4 3 1\n[1259] 1 1 1 3 3 1 2 3 4 3 4 1 3 4 3 4 1 4 3 4 4 3 4 3 3 3 3 4 3 4 4 2 2 1 2 2 2\n[1296] 1 4 4 3 3 3 3 1 3 1 4 4 4 4 2 3 4 3 3 3 3 1 3 2 1 4 4 3 3 3 4 3 3 2 4 4 4\n[1333] 1 3 4 1 3 1 1 4 4 3 4 3 3 4 3 3 3 2 4 4 1 1 3 3 1 3 4 4 3 1 4 2 3 4 2 4 1\n[1370] 1 4 3 3 3 4 4 4 4 4 4 3 2 2 2 4 4 4 2 4 1 4 2 2 2 4 2 4 1 1 2 1 1 4 4 2 4\n[1407] 2 2 1 4 2 2 3 4 4 2 4 1 4 4 4 2 4 1 4 4 4 3 2 2 4 2 2 2 3 2 1 2 1 1 3 4 4\n[1444] 4 3 4 2 3 3 3 3 4 3 3 1 3 2 4 3 4 4 3 3 4 3 3 3 2 2 4 3 3 2 4 2 3 3 2 3 4\n[1481] 3 4 1 2 4 4 2 3 1 1 4 2 1 3 1 1 2 4 2 3 4 3 4 4 4 4 1 3 3 4 4 4 4 3 4 4 3\n[1518] 3 2 3 3 4 3 3 3 3 3 1 3 3 3 3 1 4 3 4 2 3 4 4 3 2 4 2 2 3 3 3 4 4 3 4 3 3\n[1555] 3 3 3 3 4 2 3 4 4 3 4 4 3 4 1 3 3 1 3 4 4 1 2 4 3 1 4 2 4 3 1 3 3 1 3 4 3\n[1592] 3 4 2 4 1 4 1 4 2 4 1 2 2 4 4 4 4 1 1 4 2 2 4 4 3 1 4 1 4 2 4 3 4 4 3 1 4\n[1629] 4 2 4 4 4 4 1 4 3 3 1 4 3 3 4 3 4 3 3 2 2 3 4 1 4 3 3 4 2 3 1 1 1 1 4 3 3\n[1666] 4 2 4 2 4 3 2 3 3 1 1 2 3 3 4 1 1 1 1 1 1 3 1 1 4 3 1 1 1 3 4 1 1 1 3 4 1\n[1703] 4 3 3 4 3 3 3 3 2 4 3 4 4 3 4 4 3 2 3 1 3 3 4 3 2 1 4 4 4 1 4 4 1 3 2 1 2\n[1740] 2 3 3 3 3 4 1 2 3 2 4 3 3 1 3 2 3 1 1 2 1 1 4 2 4 1 1 1 3 3 4 3 3 3 3 2 4\n[1777] 3 3 3 3 3 1 3 2 4 3 4 3 4 1 3 4 3 1 4 3 4 4 3 3 1 2 3 3 1 4 4 1 4 1 3 4 2\n[1814] 4 2 3 4 4 2 4 3 4 2 1 3 2 3 1 1 3 3 3 3 3 3 1 4 4 1 4 3 4 1 4 2 3 3 3 1 1\n[1851] 3 2 4 4 3 1 3 3 3 1 3 1 4 1 4 4 1 4 3 3 3 3 3 3 3 3 3 2 1 2 1 2 1 1 4 2 4\n[1888] 3 1 4 1 1 3 3 3 1 3 3 2 4 3 4 3 4 1 3 4 3 2 4 3 2 4 3 4 2 3 2 3 1 3 4 4 2\n[1925] 2 2 2 3 1 3 1 1 2 3 2 3 1 3 2 3 1 3 1 1 1 3 3 1 4 3 1 3 4 3 1 3 2 2 1 2 2\n[1962] 4 2 1 3 3 4 1 3 3 4 3 4 4 4 1 1 3 4 1 1 1 1 1 1 3 3 3 1 4 4 1 2 3 3 3 3 3\n[1999] 3 1 3 3 3 3 3 3 3 2 3 2 2 3 3 4 2 2 4 2 4 4 3 3 1 3 1 3 2 3 3 1 4 3 2 1 4\n[2036] 2 3 3 4 2 1 4 4 4 4 2 4 3 3 3 4 3 3 2 2 3 3 3 1 3 1 2 4 4 3 4 4 3 4 4 3 4\n[2073] 3 1 3 4 4 1 4 4 4 2 4 4 3 3 2 3 4 3 3 3 2 4 4 3 4 3 3 3 3 2 1 4 3 4 1 3 3\n[2110] 1 3 3 3 2 1 3 2 4 4 4 3 4 3 3 4 3 3 1 3 4 4 3 3 3 4 1 4 1 2 2 4 4 3 2 3 3\n[2147] 4 4 2 2 4 4 2 2 1 3 2 2 4 2 4 2 4 2 4 3 3 1 1 1 1 1 4 3 1 1 4 4 3 4 3 4 3\n[2184] 3 4 2 2 4 2 4 4 3 3 4 2 4 2 2 1 1 3 3 1 3 3 3 4 4 4 4 3 4 4 4 4 3 2 4 3 4\n[2221] 4 3 3 3 3 3 3 3 4 3 4 3 2 3 2 4 1 3 3 4 3 1 3 3 1 4 3 3 2 1 1 4 3 1 3 4 4\n[2258] 4 1 4 1 4 2 3 3 3 3 3 3 3 4 3 4 2 4 3 1 2 1 3 2 2 1 1 1 1 3 3 1 2 4 3 1 2\n[2295] 4 3 3 1 4 4 4 4 1 4 3 3 4 3 4 4 3 4 4 2 4 3 4 3 3 2 4 3 4 3 1 4 4 4 4 3 1\n[2332] 3 1 4 1 4 1 3 3 2 3 3 2 3 2 1 3 2 4 3 1 1 4 2 2 4 4 2 1 4 4 2 3 3 1 4 1 1\n[2369] 3 3 4 1 2 2 1 3 1 2 1 1 1 3 4 2 4 3 3 3 2 2 4 3 4 4 1 1 1 2 2 2 2 4 1 4 4\n[2406] 1 2 4 1 4 1 1 1 4 1 4 1 1 2 1 4 1 1 4 1 4 3 1 3 1 1 3 1 1 1 4 3 3 3 4 3 3\n[2443] 1 1 1 1 1 4 4 1 3 3 4 4 1 1 3 3 1 3 3 2 2 3 4 3 3 4 2 4 3 3 2 4 2 4 3 2 1\n[2480] 4 4 1 1 1 1 1 4 4 4 3 4 1 3 4 4 3 2 4 4 3 4 1 4 4 3 1 1 4 3 4 1 1 2 4 3 2\n[2517] 3 1 2 1 3 4 3 3 3 3 4 4 4 3 3 3 3 3 2 3 4 4 4 4 3 3 3 4 4 3 3 4 1 1 4 1 4\n[2554] 3 3 3 3 3 3 4 2 4 2 4 3 1 2 4 1 4 4 2 2 3 3 1 1 1 4 4 3 3 3 3 3 3 3 2 3 3\n[2591] 4 3 3 3 4 3 1 4 1 1 4 1 4 4 4 2 3 1 1 2 3 1 4 4 2 4 4 4 4 3 3 4 4 4 2 3 4\n[2628] 4 1 1 4 4 1 3 1 2 3 1 4 2 2 3 2 3 3 4 2 4 3 3 3 3 2 3 1 1 1 4 3 2 3 3 4 2\n[2665] 2 4 3 4 4 3 3 3 4 2 4 4 2 3 4 4 4 3 4 4 4 2 4 1 3 4 4 4 3 4 4 4 3 2 3 4 2\n[2702] 4 4 4 1 1 1 4 1 1 1 3 3 1 1 3 1 3 2 3 2 3 4 4 3 3 2 4 1 2 1 3 4 2 3 1 4 2\n[2739] 4 2 3 4 3 2 2 2 3 4 3 4 3 4 4 2 2 1 1 2 2 4 3 3 3 4 3 4 2 3 4 3 1 4 4 2 4\n[2776] 4 4 4 2 4 4 3 1 1 1 3 2 3 3 3 1 1 1 4 3 2 4 3 4 4 1 1 2 2 2 4 3 3 1 3 2 4\n[2813] 4 3 2 2 4 2 3 4 4 1 3 2 3 3 1 3 3 3 3 3 2 4 4 3 1 3 2 2 2 2 2 2 2 2 2 2 3\n[2850] 1 3 2 3 4 2 3 4 2 3 4 3 2 2 2 4 4 4 4 4 4 4 2 3 2 4 2 3 3 4 2 2 2 4 2 4 2\n[2887] 2 2 2 4 3 3 1 3 2 3 1 1 2 3 2 2 3 2 4 3 1 2 2 2 3 3 2 1 2 2 4 4 2 4 2 1 4\n[2924] 4 4 1 2 3 3 4 3 2 1 4 2 2 2 1 4 4 4 4 3 4 4 3 4 4 1 4 4 2 4 4 2 4 2 2 2 2\n[2961] 4 4 2 4 4 4 4 4 3 2 3 4 4 4 4 3 4 4 4 4 4 2 1 3 2 4 4 4 2 1 3 3 4 4 4 4 4\n[2998] 3 4 4 4 4 3 2 4 3 1 3 3 1 1 4 2 4 2 2 4 3 4 2 2 2 4 2 4 3 4 3 4 4 4 4 2 1\n[3035] 3 2 1 3 4 1 4 3 3 4 4 2 4 3 4 1 1 1 3 4 2 4 2 4 1 2 3 3 4 3 1 4 1 4 4 2 4\n[3072] 2 3 4 4 2 4 1 2 4 2 3 2 2 2 2 2 1 2 2 2 1 3 4 2 2 2 4 4 4 4 2 4 4 4 3 3 3\n[3109] 3 1 4 2 4 4 4 4 2 2 3 2 1 4 4 2 4 3 4 2 2 4 3 1 4 4 4 1 4 4 4 4 1 2 4 4 4\n[3146] 4 4 3 4 3 2 4 1 2 4 4 4 4 4 4 2 4 4 4 1 4 4 4 2 4 3 2 4 4 4 3 2 3 2 4 2 4\n[3183] 4 2 2 4 2 4 4 3 4 3 4 4 2 4 4 4 4 4 3 4 2 4 3 3 2 4 3 3 4 3 4 3 2 2 4 4 4\n[3220] 2 2 2 4 3 3 2 4 1 1 4 3 4 2 2 4 3 3 3 4 2 4 4 4 2 2 4 4 3 3 3 4 3 4 4 1 1\n[3257] 1 1 1 1 1 2 1 2 1 3 4 3 4 1 4 2 2 4 4 2 3 4 1 4 4 4 4 3 4 4 4 4 3 1 2 2 1\n[3294] 2 4 1 1 1 4 4 2 2 2 2 3 2 3 1 4 2 4 3 2 2 1 2 2 4 4 3 4 2 4 2 4 4 3 2 4 4\n[3331] 3 3 3 3 2 1 1 1 2 2 4 2 4 1 1 1 1 3 2 2 4 2 2 2 4 4 3 2 2 2 2 2 4 2 2 2 4\n[3368] 4 3 4 4 4 3 4 3 4 3 1 3 1 4 4 4 3 3 4 3 1 2 2 4 4 2 4 1 1 4 1 1 2 4 4 4 4\n[3405] 2 4 2 1 1 4 3 4 3 1 3 3 1 2 1 3 3 2 4 3 4 3 3 3 4 3 3 3 4 2 2 2 2 4 1 4 4\n[3442] 4 2 4 1 4 3 2 4 4 4 4 4 2 4 2 3 3 4 3 4 1 4 4 3 4 4 1 2 3 1 4 4 2 1 3 2 3\n[3479] 3 2 2 4 2 2 2 4 2 1 2 2 3 4 4 4 4 4 3 3 4 4 4 4 3 2 4 4 3 4 3 3 3 2 4 2 2\n[3516] 2 3 4 4 4 1 3 3 1 4 4 4 3 2 4 3 3 2 3 3 3 2 4 4 2 2 4 3 3 3 1 3 1 4 3 4 4\n[3553] 4 4 2 4 4 2 4 2 2 2 3 2 2 2 4 2 2 2 2 2 4 2 4 4 3 4 4 2 3 4 2 2 2 4 3 4 4\n[3590] 4 4 3 3 3 4 4 4 3 3 1 2 4 4 4 2 3 3 2 3 3 3 2 4 3 3 2 1 4 4 4 3 4 2 4 2 1\n[3627] 4 1 3 3 4 4 4 4 3 2 2 4 2 2 4 3 3 4 4 3 2 2 4 4 4 1 4 1 4 4 1 4 3 4 4 3 2\n[3664] 3 3 4 3 4 2 4 3 2 2 2 4 3 2 3 4 4 1 4 4 1 4 1 3 2 1 4 3 4 4 4 4 3 4 1 2 3\n[3701] 3 4 3 3 3 3 2 4 1 3 2 3 3 1 2 1 3 4 4 1 3 4 4 3 4 4 4 3 2 4 1 3 4 4 4 2 2\n[3738] 4 4 3 3 3 3 3 3 3 4 1 4 3 3 4 3 3 4 4 4 3 3 4 4 2 2 2 4 1 1 1 4 1 4 4 4 4\n[3775] 1 4 4 4 4 2 1 4 2 1 4 2 1 1 1 1 1 1 4 3 4 4 2 2 4 3 2 2 4 4 2 2 2 4 4 4 3\n[3812] 3 4 3 3 4 4 4 4 4 4 3 1 1 4 2 4 2 4 2 4 4 4 4 3 4 4 4 3 4 2 1 4 4 2 3 4 3\n[3849] 2 2 4 4 2 4 4 3 2 4 4 1 1 3 1 1 2 4 4 1 1 3 3 1 1 3 1 4 3 2 3 2 4 4 4 3 4\n[3886] 2 3 2 4 4 2 4 4 2 4 2 3 3 4 4 2 2 2 2 4 2 2 2 4 4 3 4 2 4 4 4 3 1 4 4 4 3\n[3923] 2 4 4 2 2 4 3 3 2 4 4 2 2 1 4 3 2 3 3 3 4 4 3 3 4 3 4 3 3 3 2 4 3 2 4 2 4\n[3960] 4 3 3 4 4 3 2 4 1 1 4 3 4 2 1 1 3 4 4 1 1 3 3 3 4 4 4 4 1 4 4 1 4 2 4 4 4\n[3997] 4 3 4 4 4 4 2 4 4 4 2 4 2 3 4 3 4 3 1 2 3 4 1 2 2 4 3 3 3 2 3 3 2 4 4 4 4\n[4034] 4 4 3 3 3 4 4 1 3 4 4 4 4 3 4 4 2 4 2 3 4 3 2 4 4 4 2 2 2 4 4 2 4 3 3 3 4\n[4071] 3 2 3 4 2 4 4 4 4 2 4 4 3 3 2 2 2 4 2 4 3 2 4 2 2 2 4 2 4 4 2 3 3 2 2 4 3\n[4108] 3 4 3 1 2 2 2 4 2 3 3 4 3 4 3 3 2 2 3 3 1 1 2 4 1 1 4 2 4 4 1 2 3 3 3 4 4\n[4145] 3 3 4 3 4 2 1 1 4 1 1 1 1 3 3 3 3 3 3 4 4 2 3 4 4 4 3 4 3 2 3 3 3 4 4 1 4\n[4182] 2 3 2 2 1 2 4 4 4 2 4 2 2 2 2 2 3 3 2 2 2 4 3 4 2 3 4 2 2 4 1 3 2 1 1 1 4\n[4219] 3 1 2 4 4 2 2 1 3 2 1 4 4 2 2 4 4 4 4 2 4 2 4 3 3 2 4 4 2 4 4 3 2 2 2 2 4\n[4256] 4 4 4 4 4 3 4 3 3 4 3 4 4 3 1 3 1 4 4 4 4 4 3 2 4 4 4 4 2 2 2 2 4 2 4 4 1\n[4293] 4 1 4 1 4 4 4 3 3 3 1 4 4 4 4 4 2 4 3 4 4 2 4 4 2 3 4 4 1 3 4 4 4 3 3 3 3\n[4330] 3 3 3 3 3 3 3 3 3 3 2 3 4 3 4 4 4 4 3 3 1 2 4 3 3 3 4 3 1 3 1 3 4 4 4 4 3\n[4367] 4 4 4 4 4 2 4 2 3 1 4 2 4 4 3 3 4 2 3 3 3 2 2 4 3 1 3 3 3 3 3 3 3 3 3 4 3\n[4404] 1 1 1 4 2 1 4 3 2 4 2 4 4 3 4 4 4 4 4 4 4 4 4 4 1 3 3 3 2 2 1 3 3 2 3 4 4\n[4441] 3 4 3 4 4 4 4 2 4 3 4 1 3 2 3 3 3 3 4 4 3 3 4 4 4 4 3 3 2 4 2 2 2 4 4 4 4\n[4478] 3 3 4 4 3 3 4 4 2 2 2 4 4 4 2 2 3 2 1 2 3 4 2 3 3 3 4 4 3 4 2 3 2 3 4 4 2\n[4515] 1 4 2 2 2 3 1 1 2 3 3 3 1 2 2 3 3 3 4 4 4 3 3 2 4 2 4 4 2 2 4 4 2 2 1 2 2\n[4552] 4 4 4 4 2 4 1 4 4 4 2 4 4 4 3 3 3 4 4 2 2 2 2 4 4 2 2 2 4 4 4 3 3 4 3 4 4\n[4589] 4 4 3 1 3 4 4 4 4 2 4 2 4 4 3 4 3 2 4 3 2 2 2 2 3 3 3 4 2 4 4 1 4 2 4 4 2\n[4626] 3 1 2 2 2 4 4 1 1 4 4 3 4 3 1 4 4 2 1 4 3 2 4 1 2 2 4 1 2 3 3 3 3 4 2 2 3\n[4663] 4 4 4 4 1 4 4 4 3 3 3 4 3 3 4 4 3 3 4 2 2 4 1 4 4 3 3 3 3 3 3 3 3 4 2 4 4\n[4700] 3 3 3 3 2 1 4 4 4 4 3 4 4 4 2 4 2 2 4 4 2 2 2 4 3 2 4 2 4 4 2 4 3 3 4 2 2\n[4737] 2 4 4 2 1 4 4 3 2 1 4 2 3 3 3 1 2 4 4 2 4 4 4 4 4 4 2 4 4 2 4 3 3 3 3 3 1\n[4774] 2 4 4 4 4 4 2 4 3 4 4 3 2 4 4 3 4 4 4 4 3 3 3 3 2 4 4 4 3 4 4 2 2 4 4 2 3\n[4811] 3 2 4 3 4 4 3 4 2 4 3 4 3 4 3 4 4 2 3 2 4 4 4 2 2 4 2 1 4 2 4 1 2 3 3 2 3\n[4848] 4 3 3 3 3 4 2 2 3 3 4 3 4 4 2 2 2 3 2 4 2 4 2 4 2 3 4 4 2 4 2 2 3 3 4 3 3\n[4885] 3 3 4 2 4 4 2 4 4 2 3 4 4 2\n\nWithin cluster sum of squares by cluster:\n[1] 681403.3 357903.9 579703.3 462118.7\n (between_SS / total_SS =  80.0 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n\n\n\nfviz_cluster(kmeans4, data=whitewine)\n\n\n\n\n\nwhitewine &lt;- whitewine %&gt;%\n  mutate(Cluster = kmeans4$cluster)\n\n\nwhitewine$Cluster &lt;- \n  as_factor(whitewine$Cluster)\n\n\nwhitewine %&gt;%\n  parallelPlot(refColumnDim = \"Cluster\",\n               width = 300,\n               height = 250,\n               rotateTitle = TRUE)"
  }
]